[{"C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\serviceWorker.js":"1","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\actions\\chatMessages.js":"2","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\index.js":"3","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\reducers\\promiseReducer.js":"4","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\RegistrationForm.js":"5","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\actions\\promiseActions.js":"6","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\UserInfo.js":"7","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\Messages.js":"8","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\actions\\chatCreate.js":"9","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\App.js":"10","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\actions\\authorization.js":"11","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\reducers\\AuthReducer.js":"12","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\reducers\\chatMessagesReducer.js":"13","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\LoginForm.js":"14","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\actions\\requests.js":"15","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\MyPortal.js":"16","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\reducers\\chatCreateReducer.js":"17","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\reducers\\allReducers.js":"18","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\SearchUser.js":"19","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\Auth.js":"20","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\Chats.js":"21","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\emojiList.js":"22"},{"size":5086,"mtime":499162500000,"results":"23","hashOfConfig":"24"},{"size":213,"mtime":1606407939467,"results":"25","hashOfConfig":"24"},{"size":994,"mtime":1610626744514,"results":"26","hashOfConfig":"24"},{"size":385,"mtime":1602098567214,"results":"27","hashOfConfig":"24"},{"size":4638,"mtime":1610621287923,"results":"28","hashOfConfig":"24"},{"size":947,"mtime":1606408235189,"results":"29","hashOfConfig":"24"},{"size":4789,"mtime":1611244128225,"results":"30","hashOfConfig":"24"},{"size":2817,"mtime":1611332827737,"results":"31","hashOfConfig":"24"},{"size":995,"mtime":1606408071170,"results":"32","hashOfConfig":"24"},{"size":2998,"mtime":1610997562436,"results":"33","hashOfConfig":"24"},{"size":176,"mtime":1609776115824,"results":"34","hashOfConfig":"24"},{"size":568,"mtime":1609783858661,"results":"35","hashOfConfig":"24"},{"size":351,"mtime":1605027423042,"results":"36","hashOfConfig":"24"},{"size":4144,"mtime":1610621281311,"results":"37","hashOfConfig":"24"},{"size":10977,"mtime":1610992276871,"results":"38","hashOfConfig":"24"},{"size":450,"mtime":1603283508976,"results":"39","hashOfConfig":"24"},{"size":1579,"mtime":1606398001761,"results":"40","hashOfConfig":"24"},{"size":396,"mtime":1605970584385,"results":"41","hashOfConfig":"24"},{"size":4823,"mtime":1611333230762,"results":"42","hashOfConfig":"24"},{"size":1576,"mtime":1610639748101,"results":"43","hashOfConfig":"24"},{"size":4883,"mtime":1610908879737,"results":"44","hashOfConfig":"24"},{"size":46382,"mtime":1611332833080,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"dt7ym5",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"57"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"89"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"48"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\serviceWorker.js",[],["103","104"],"C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\actions\\chatMessages.js",[],["105","106"],"C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\index.js",["107","108"],"import React from \"react\";\r\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\r\n\r\nimport LoginForm from \"./LoginForm\";\r\nimport RegistrationForm from \"./RegistrationForm\";\r\nimport Auth from \"./Auth\";\r\nimport { User } from \"./Auth\";\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <div>\r\n      <h1>Main Page</h1>\r\n      <Link to={`/login`}>Sign in</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={MainPage} />\r\n      <Route exact path=\"/login\" render={(props) => <LoginForm {...props} />} />\r\n      <Route\r\n        exact\r\n        path=\"/registration\"\r\n        render={(props) => <RegistrationForm {...props} />}\r\n      />\r\n      <Route\r\n        path=\"/auth/userId=:userId?&chatId=:chatId?\"\r\n        render={(props) => <Auth {...props} />}\r\n      />\r\n      <Route\r\n        path=\"/auth/userId=:userId?\"\r\n        render={(props) => <Auth {...props} />}\r\n      />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\reducers\\promiseReducer.js",[],["109","110"],"C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\RegistrationForm.js",["111","112"],"import React, { useState, useEffect } from \"react\";\r\nimport { Input, Button, Form, Tooltip } from \"antd\";\r\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\r\nimport { actionRegistration } from \"../actions/requests\";\r\nimport { actionLogout } from \"../actions/authorization\";\r\nimport { connect } from \"react-redux\";\r\nimport { check, checkTwo } from \"../App\";\r\nimport \"../App.css\";\r\nimport \"./styles/registration-form.css\";\r\n\r\nactionLogout();\r\n\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst RegisterFormTwo = connect(\r\n  (state) => ({\r\n    state: state,\r\n    id: checkTwo`${state}AuthReducer.data.sub.id`,\r\n    failure: checkTwo`${state}promiseReducer.regitration.error`,\r\n  }),\r\n  {\r\n    onRegistration: actionRegistration,\r\n  }\r\n)(({ state, onRegistration, history, id, failure }) => {\r\n  const [login, setLogin] = useState(\"\");\r\n  const [nick, setNick] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      setTimeout(\r\n        () =>\r\n          history.push(\r\n            `/auth/userId=${checkTwo`${state}AuthReducer.data.sub.id`}`\r\n          ),\r\n        2000\r\n      );\r\n    } else if (failure) {\r\n      setError(() => true);\r\n    }\r\n  }, [id, failure]);\r\n\r\n  return (\r\n    <section className=\"RegistrationForm\">\r\n      <Form>\r\n        <h1> Registration </h1>\r\n        <span\r\n          className=\"error-value\"\r\n          style={{\r\n            visibility: error ? \"visible\" : \"hidden\",\r\n          }}\r\n        >\r\n          User {login} already exists\r\n        </span>\r\n        <Form.Item\r\n          name=\"login\"\r\n          label=\"Login\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Login\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input value={login} onChange={(e) => setLogin(e.target.value)} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your password!\",\r\n            },\r\n          ]}\r\n          hasFeedback\r\n        >\r\n          <Input.Password\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"Confirm Password\"\r\n          dependencies={[\"password\"]}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please confirm your password!\",\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(rule, value) {\r\n                if (!value || getFieldValue(\"password\") === value) {\r\n                  return Promise.resolve();\r\n                }\r\n\r\n                return Promise.reject(\r\n                  \"The two passwords that you entered do not match!\"\r\n                );\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"nickname\"\r\n          label={\r\n            <span>\r\n              Nickname &nbsp;\r\n              <Tooltip title=\"What do you want others to call you?\">\r\n                <QuestionCircleOutlined />\r\n              </Tooltip>\r\n            </span>\r\n          }\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your nickname!\",\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input value={nick} onChange={(e) => setNick(e.target.value)} />\r\n        </Form.Item>\r\n        <Form.Item {...tailFormItemLayout}>\r\n          <Button\r\n            style={{ width: \"100%\" }}\r\n            onClick={() => {\r\n              onRegistration(login, password, nick);\r\n            }}\r\n            disabled={\r\n              login.length <= 2 ||\r\n              login.length > 35 ||\r\n              password !== confirmPassword ||\r\n              nick.length <= 2 ||\r\n              nick.length > 15\r\n                ? true\r\n                : false\r\n            }\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n          >\r\n            Register\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default RegisterFormTwo;\r\n","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\actions\\promiseActions.js",[],["113","114"],"C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\UserInfo.js",["115","116","117"],"C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\Messages.js",["118","119","120"],"C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\actions\\chatCreate.js",[],"C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\App.js",["121","122","123","124","125","126","127","128","129","130","131"],"C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\actions\\authorization.js",[],"C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\reducers\\AuthReducer.js",[],"C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\reducers\\chatMessagesReducer.js",[],"C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\LoginForm.js",["132","133","134","135","136","137"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, Button, Checkbox } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { actionLogin, actionUserFindOne } from \"../actions/requests\";\r\nimport { actionPromise } from \"../actions/promiseActions\";\r\nimport { check, checkTwo } from \"../App\";\r\nimport { Spin, Alert } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"../App.css\";\r\nimport \"./styles/login-form.css\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  token: checkTwo`${state}promiseReducer.payload.data.login`,\r\n  state: state,\r\n  id: checkTwo`${state}AuthReducer.data.sub.id`,\r\n  failure: checkTwo`${state}promiseReducer.userLogin.error`,\r\n});\r\nconst mapDispatchToProps = {\r\n  onLogin: actionLogin,\r\n  onPromise: actionPromise,\r\n  onUserFind: actionUserFindOne,\r\n};\r\n\r\nconst NormalLoginForm = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(({ onLogin, history, state, id, failure }) => {\r\n  const [login, setLogin] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [error, setError] = useState(false);\r\n  const onFinish = (values) => {\r\n    console.log(\"Received values of form: \", values);\r\n  };\r\n\r\n  // const [spin, setSpin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      setTimeout(\r\n        () =>\r\n          history.push(\r\n            `/auth/userId=${checkTwo`${state}AuthReducer.data.sub.id`}`\r\n          ),\r\n        2000\r\n      );\r\n    } else if (failure) {\r\n      setError(() => true);\r\n    }\r\n  }, [id, failure]);\r\n\r\n  return (\r\n    <section className=\"LoginForm\">\r\n      <Form\r\n        name=\"normal_login\"\r\n        className=\"login-form\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n      >\r\n        <h1> Sign in to Chat </h1>\r\n        <span\r\n          className=\"error-value\"\r\n          style={{\r\n            visibility: error ? \"visible\" : \"hidden\",\r\n          }}\r\n        >\r\n          Incorrect username or password.\r\n        </span>\r\n        <Form.Item\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Username!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Login\"\r\n            value={login}\r\n            onChange={(e) => setLogin(e.target.value)}\r\n            style={{\r\n              color: error ? \"red\" : \"black\",\r\n            }}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Password!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            style={{\r\n              color: error ? \"red\" : \"black\",\r\n            }}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n            <Checkbox> Remember me </Checkbox>\r\n          </Form.Item>\r\n          <a className=\"login-form-forgot\" href=\"\">\r\n            Forgot password\r\n          </a>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button\r\n            onClick={() => {\r\n              onLogin(login, password);\r\n              // setSpin(() => true);\r\n            }}\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            id=\"log-in\"\r\n            className=\"login-form-button\"\r\n          >\r\n            Log in\r\n          </Button>\r\n          Or <Link to={`/registration`}> register now! </Link>\r\n        </Form.Item>\r\n      </Form>\r\n      {/* {spin && <Spin tip=\"Loading...\" size=\"large\" /> && setTimeout(()=>{setSpin(() => true)},2000)} */}\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default NormalLoginForm;\r\n","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\actions\\requests.js",["138","139","140","141","142","143","144"],"import { GQL } from \"../App\";\r\nimport { actionToken, actionAuthUserInfo } from \"./authorization\";\r\nimport { actionSaveMessages } from \"./chatMessages\";\r\nimport { actionRejected, actionPromise } from \"./promiseActions\";\r\n\r\nexport function actionLogin(login, password) {\r\n  return async function (dispatch) {\r\n    let data = await dispatch(\r\n      actionPromise(\r\n        \"userLogin\",\r\n        GQL(\r\n          `query login($login:String, $password:String){\r\n    login(\r\n      login:$login, password:$password)\r\n  }`,\r\n          {\r\n            login,\r\n            password,\r\n          }\r\n        )\r\n      )\r\n    );\r\n    if (data.data.login == null) {\r\n      await dispatch(\r\n        actionRejected(\"userLogin\", new SyntaxError(\"Данные некорректны\"))\r\n      );\r\n      return;\r\n    }\r\n    console.log(data.data.login);\r\n    await dispatch(actionToken(data.data.login));\r\n    await dispatch(actionUserFindOne(login));\r\n  };\r\n}\r\n\r\nexport function actionUserFindOne(login) {\r\n  return async function (dispatch) {\r\n    let data = await dispatch(\r\n      actionPromise(\r\n        \"userFindOne\",\r\n        GQL(\r\n          `query UserInfo($query:String){\r\n            UserFindOne(query: $query){\r\n              _id\r\n              createdAt\r\n              login\r\n              nick\r\n              avatar{\r\n                url\r\n                originalFileName\r\n              }\r\n              chats{\r\n                _id\r\n                title\r\n                members{\r\n                  login\r\n                }\r\n              }\r\n            }\r\n          }`,\r\n          { query: JSON.stringify([{ login: login }]) }\r\n        )\r\n      )\r\n    );\r\n    console.log(\"data: \", data);\r\n    // await dispatch(actionAuthUserInfo(data.data.UserFindOne));\r\n  };\r\n}\r\n\r\nexport function actionRegistration(login, password, nick) {\r\n  return async function (dispatch) {\r\n    let data = await dispatch(\r\n      actionPromise(\r\n        \"regitration\",\r\n        GQL(\r\n          `mutation registration($user:UserInput){\r\n            UserUpsert(user:$user){\r\n              _id login nick\r\n            }\r\n          }`,\r\n          { user: { login: login, password: password, nick: nick } }\r\n        )\r\n      )\r\n    );\r\n    console.log(data);\r\n    if (data.errors) {\r\n      await dispatch(\r\n        actionRejected(\"regitration\", new SyntaxError(\"Данные некорректны\"))\r\n      );\r\n      return;\r\n    } else {\r\n      if (data.data.UserUpsert.login) {\r\n        console.log(\"data.data.UserUpsert.login: \", data.data.UserUpsert.login);\r\n        await dispatch(actionLogin(data.data.UserUpsert.login, password));\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport function actionUserFindOneOnLogin(login) {\r\n  return async function (dispatch) {\r\n    let data = await dispatch(\r\n      actionPromise(\r\n        \"userFindOneOnLogin\",\r\n        GQL(\r\n          `query UserInfo($query:String){\r\n            UserFindOne(query: $query){\r\n              _id\r\n              createdAt\r\n              login\r\n              nick\r\n              avatar{\r\n                url\r\n              }\r\n              chats{\r\n                title\r\n                members{\r\n                  login\r\n                }\r\n              }\r\n            }\r\n          }`,\r\n          { query: JSON.stringify([{ login: login }]) }\r\n        )\r\n      )\r\n    );\r\n  };\r\n}\r\n\r\nexport function actionUserFindOneOnLoginForCreatChat(login) {\r\n  return async function (dispatch) {\r\n    let data = await dispatch(\r\n      actionPromise(\r\n        \"userFindOneOnLoginForCreatChat\",\r\n        GQL(\r\n          `query UserInfo($query:String){\r\n            UserFindOne(query: $query){\r\n                _id\r\n                createdAt\r\n                login\r\n                nick\r\n                avatar{\r\n                  url\r\n                }\r\n                chats{\r\n                  title\r\n                  members{\r\n                    login\r\n                  }\r\n                }\r\n              }\r\n            }`,\r\n          { query: JSON.stringify([{ login: login }]) }\r\n        )\r\n      )\r\n    );\r\n  };\r\n}\r\n\r\nexport function actionCreateChat(title, id) {\r\n  return async function (dispatch) {\r\n    let data = await dispatch(\r\n      actionPromise(\r\n        \"createChat\",\r\n        GQL(\r\n          `mutation CreateChat($chat:ChatInput){\r\n            ChatUpsert(chat:$chat){\r\n              _id\r\n              title\r\n              owner{\r\n                _id\r\n                login\r\n                nick\r\n              }\r\n            }\r\n          }`,\r\n          { chat: { title: title, members: { _id: id } } }\r\n        )\r\n      )\r\n    );\r\n    await dispatch(actionFindAllChats(id));\r\n  };\r\n}\r\n\r\nexport function actionChatWithSelectedUser(title, id, idSelectedUser) {\r\n  return async function (dispatch) {\r\n    let data = await dispatch(\r\n      actionPromise(\r\n        \"createChat\",\r\n        GQL(\r\n          `mutation CreateChat($chat:ChatInput){\r\n            ChatUpsert(chat:$chat){\r\n              _id\r\n              title\r\n              owner{\r\n                _id\r\n                login\r\n                nick\r\n              }\r\n            }\r\n          }`,\r\n          {\r\n            chat: {\r\n              title: title,\r\n              members: [{ _id: id }, { _id: idSelectedUser }],\r\n            },\r\n          }\r\n        )\r\n      )\r\n    );\r\n    await dispatch(actionFindAllChats(id));\r\n  };\r\n}\r\n\r\nexport function actionAddAvatar(userId, avatarId) {\r\n  return async function (dispatch) {\r\n    let data = await dispatch(\r\n      actionPromise(\r\n        \"addAvatarToUser\",\r\n        GQL(\r\n          `mutation addAvatarToUser($user:UserInput){\r\n            UserUpsert(user:$user){\r\n              login\r\n              avatar{\r\n                url\r\n                originalFileName\r\n              }\r\n            }\r\n          }`,\r\n          { user: { _id: userId, avatar: { _id: avatarId } } }\r\n        )\r\n      )\r\n    );\r\n    console.log(data);\r\n  };\r\n}\r\n\r\n// \"[{\\\"_id\\\": \\\"5e04fbb9fcc6d159b36b3e2d\\\"}]\"\r\nexport function actionFindAllChats(id) {\r\n  return async function (dispatch) {\r\n    let data = await dispatch(\r\n      actionPromise(\r\n        \"findChats\",\r\n        GQL(\r\n          `query usersChats($query: String) {\r\n            UserFindOne(query: $query) {\r\n              chats {\r\n                _id\r\n                title\r\n                members {\r\n                  login\r\n                }\r\n              }\r\n            }\r\n          }`,\r\n          { query: JSON.stringify([{ _id: id }]) }\r\n        )\r\n      )\r\n    );\r\n  };\r\n}\r\n\r\nexport function actionUpload(form, userId) {\r\n  return async (dispatch) => {\r\n    let data = await dispatch(\r\n      actionPromise(\r\n        \"uploadFile\",\r\n        fetch(\"http://chat.fs.a-level.com.ua/upload\", {\r\n          method: \"POST\",\r\n          headers: localStorage.authToken\r\n            ? { Authorization: \"Bearer \" + localStorage.authToken }\r\n            : {},\r\n          body: new FormData(form),\r\n        }).then((res) => {\r\n          console.log(\"Res: \", res);\r\n          return res.json();\r\n        })\r\n      )\r\n    );\r\n    console.log(data);\r\n    await dispatch(actionAddAvatar(userId, data._id));\r\n  };\r\n}\r\n\r\nexport function actionGetMessages(id) {\r\n  return async (dispatch) => {\r\n    let data = await dispatch(\r\n      actionPromise(\r\n        \"oneChatMessages\",\r\n        GQL(\r\n          `query oneChatMessages($query: String) {\r\n            ChatFindOne(query: $query) {\r\n              _id\r\n              title\r\n              avatar{\r\n                url\r\n              } \r\n              members {\r\n                nick\r\n              }\r\n              messages {\r\n                _id\r\n                owner {\r\n                  nick\r\n                }\r\n                text\r\n                createdAt\r\n              }\r\n            }\r\n          }`,\r\n          { query: JSON.stringify([{ _id: id }]) }\r\n        )\r\n      )\r\n    );\r\n    if (data.data.ChatFindOne !== null) {\r\n      dispatch(\r\n        actionSaveMessages(\r\n          data.data.ChatFindOne.messages,\r\n          data.data.ChatFindOne._id,\r\n          data.data.ChatFindOne.title\r\n        )\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\nexport function actionSetMessage(idChat, text) {\r\n  return async (dispatch) => {\r\n    let data = await dispatch(\r\n      actionPromise(\r\n        \"setMessage\",\r\n        GQL(\r\n          `mutation addMessageToChat($message:MessageInput){\r\n            MessageUpsert(message:$message){\r\n              _id\r\n              createdAt\r\n              text\r\n              owner{\r\n                _id\r\n                login\r\n                nick\r\n              }\r\n              chat{\r\n                _id\r\n                title\r\n              }\r\n            }\r\n          }`,\r\n          { message: { chat: { _id: idChat }, text: text } }\r\n        )\r\n      )\r\n    );\r\n    // console.log(data);\r\n\r\n    // dispatch(\r\n    //   actionSaveMessages(\r\n    //     [\r\n    //       {\r\n    //         _id: data.data.MessageUpsert._id,\r\n    //         owner: data.data.MessageUpsert.owner,\r\n    //         text: data.data.MessageUpsert.text,\r\n    //         createdAt: data.data.MessageUpsert.createdAt,\r\n    //       },\r\n    //     ],\r\n    //     data.data.MessageUpsert.chat._id,\r\n    //     data.data.MessageUpsert.chat.title\r\n    //   )\r\n    // );\r\n\r\n    // await dispatch(actionGetMessages(data.data.MessageUpsert.chat._id));\r\n  };\r\n}\r\n\r\n// export function actionAddChatsToOwner(chats,id){\r\n//   return async dispatch=>{\r\n//       let data = await dispatch(\r\n//           actionPromise(\r\n//               \"addChatsToOwner\",\r\n//               GQL(\r\n//                   `mutation addChatToUser{\r\n//                     UserUpsert(user:{_id:5f69ea01c3de58221910d292, chats:[...chats,{_id:5f7746eb44e0156febb2aaea}]}){\r\n//                       _id\r\n//                       login\r\n//                       nick\r\n//                       avatar{\r\n//                         url\r\n//                       }\r\n//                       chats{\r\n//                         title\r\n//                       }\r\n//                     }\r\n//                   }`\r\n//                  ,{query: JSON.stringify([user:{_id:id, chats: [...chats, newChat]}])}\r\n//                  )\r\n//           )\r\n//       )\r\n//       // data.data.UserFindOne.following.push(idFollowing)\r\n//       // let newFollowing = JSON.stringify(data.data.UserFindOne.following)\r\n//       // let newArr = await dispatch(\r\n//       //     actionPromise(\r\n//       //         name,\r\n//       //         gql(`mutation following($id:String!,$newFollowing:[UserInput]!){\r\n//       //             UserUpsert( user:{_id:$id,following:$newFollowing}){\r\n//       //               _id\r\n//       //             }\r\n//       //           }`,{id,newFollowing})\r\n//       //     )\r\n//       // )\r\n//       // console.log(newArr)\r\n//   }\r\n// }\r\n\r\n// `mutation addChatToUser{\r\n//   UserUpsert(user:{_id:5f69ea01c3de58221910d292, chats:[...chats,{_id:5f7746eb44e0156febb2aaea}]}){\r\n//     _id\r\n//     login\r\n//     nick\r\n//     avatar{\r\n//       url\r\n//     }\r\n//     chats{\r\n//       title\r\n//     }\r\n//   }\r\n// }`\r\n","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\MyPortal.js",["145"],"import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nclass MyPortal extends Component {\r\n  el = document.createElement(\"div\");\r\n\r\n  componentDidMount() {\r\n    document.body.appendChild(this.el);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.body.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    return ReactDOM.createPortal(children, this.el);\r\n  }\r\n}\r\n\r\nexport default MyPortal;\r\n","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\reducers\\chatCreateReducer.js",[],["146","147"],"C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\reducers\\allReducers.js",[],"C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\SearchUser.js",["148","149","150","151","152","153"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Input, Button } from \"antd\";\r\nimport {\r\n  actionUserFindOneOnLogin,\r\n  actionCreateChat,\r\n  actionFindAllChats,\r\n  actionChatWithSelectedUser,\r\n} from \"../actions/requests\";\r\nimport { EmojiList, youtube, YOUTUBE_REGEXP } from \"./emojiList\";\r\nimport { checkTwo } from \"../App\";\r\nimport Modal from \"../components/ModalWindowCreateChat\";\r\nimport \"./styles/user-page.css\";\r\n\r\nfunction generateColor() {\r\n  return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\r\n}\r\n\r\nlet randomColor = generateColor();\r\n\r\nconst SearchUser = connect(\r\n  (state) => ({\r\n    state: state,\r\n    foundUser: checkTwo`${state}promiseReducer.userFindOneOnLogin.payload.data.UserFindOne`,\r\n    userId: checkTwo`${state}AuthReducer.data.sub.id`,\r\n    chat: checkTwo`${state}promiseReducer.createChat.payload.data.ChatUpsert`,\r\n  }),\r\n  {\r\n    onChatWithSelectedUser: actionChatWithSelectedUser,\r\n    findUserByLogin: actionUserFindOneOnLogin,\r\n    onChatCreate: actionCreateChat,\r\n    onFindChats: actionFindAllChats,\r\n  }\r\n)(\r\n  ({\r\n    findUserByLogin,\r\n    foundUser,\r\n    state,\r\n    onChatWithSelectedUser,\r\n    onChatCreate,\r\n    login,\r\n    userId,\r\n    chat,\r\n    onUserFindOne,\r\n    onFindChats,\r\n  }) => {\r\n    const [nick, setNick] = useState(\"\");\r\n    const [find, setFind] = useState(false);\r\n\r\n    const [chatTitle, setChatTitle] = useState(\"\");\r\n    const [chatCreate, setCreate] = useState(false);\r\n\r\n    let updateModal = function (bool) {\r\n      setCreate(() => bool);\r\n    };\r\n\r\n    useEffect(() => {\r\n      onFindChats(userId);\r\n    }, [chatCreate]);\r\n\r\n    return (\r\n      <div className=\"search\">\r\n        {chatCreate && (\r\n          <Modal\r\n            userId={userId}\r\n            login={login}\r\n            updateModal={updateModal}\r\n            findUserByLogin={findUserByLogin}\r\n          />\r\n        )}\r\n        <div className=\"create-chat\">\r\n          <h3>Create Chat</h3>\r\n          <Button\r\n            id=\"search-button\"\r\n            onClick={() => {\r\n              setCreate(() => true);\r\n            }}\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            Create Chat\r\n          </Button>\r\n        </div>\r\n        <h3>Search User</h3>\r\n        <Input\r\n          id=\"search-input\"\r\n          placeholder=\"Enter User Login\"\r\n          value={nick}\r\n          onChange={(e) => setNick(e.target.value)}\r\n        ></Input>\r\n        <Button\r\n          id=\"search-button\"\r\n          onClick={() => {\r\n            findUserByLogin(nick);\r\n            setFind(true);\r\n          }}\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          className=\"login-form-button\"\r\n          disabled={nick.length < 2 ? true : false}\r\n        >\r\n          Search\r\n        </Button>\r\n        <div className=\"user-found\">\r\n          <ul>\r\n            {find && foundUser ? (\r\n              <>\r\n                <li>\r\n                  {foundUser && foundUser.avatar && foundUser.avatar.url ? (\r\n                    <img\r\n                      id=\"avatarka-user-search\"\r\n                      src={`/${foundUser.avatar.url}`}\r\n                      alt=\"avatar\"\r\n                    ></img>\r\n                  ) : (\r\n                    <span\r\n                      id=\"random-color\"\r\n                      style={{ backgroundColor: `${randomColor}` }}\r\n                    >\r\n                      <span>{foundUser.login.substr(0, 2)}</span>\r\n                    </span>\r\n                  )}\r\n                </li>\r\n                <li>\r\n                  <span className=\"menu-item-name\">Login: </span>\r\n                  <button\r\n                    className=\"write-to-user\"\r\n                    datatitle=\"Write Him\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() =>\r\n                      onChatWithSelectedUser(\r\n                        foundUser.login,\r\n                        state.AuthReducer.data.sub.id,\r\n                        foundUser._id\r\n                      )\r\n                    }\r\n                  >\r\n                    {foundUser.login}\r\n                  </button>\r\n                </li>\r\n                <li>\r\n                  <span className=\"menu-item-name\">Nick: </span>\r\n                  {foundUser.nick !== null ? foundUser.nick : `\\u2013`}\r\n                </li>\r\n                <li>\r\n                  <span className=\"menu-item-name\">Registration date: </span>\r\n                  {new Date(+foundUser.createdAt).toLocaleString()}\r\n                </li>\r\n              </>\r\n            ) : (\r\n              find && <span className=\"user-not-found\">Not Found</span>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default SearchUser;\r\n","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\Auth.js",["154","155","156"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { actionUserFindOne } from \"../actions/requests\";\r\nimport { checkTwo } from \"../App\";\r\nimport UserInfo from \"../components/UserInfo\";\r\nimport Chats from \"../components/Chats\";\r\nimport SearchUser from \"../components/SearchUser\";\r\nimport \"./styles/user-page.css\";\r\n\r\nvar user;\r\n\r\nconst mapStateToProps = (state) => ({\r\n  token: state && state.AuthReducer && state.AuthReducer.token,\r\n  login: checkTwo`${state}AuthReducer.data.sub.login`,\r\n  authUserInfo: checkTwo`${state}promiseReducer.userFindOne.payload.data.UserFindOne`,\r\n  media: state,\r\n  state: state,\r\n});\r\nconst mapDispatchToProps = {\r\n  onUserFindOne: actionUserFindOne,\r\n};\r\n\r\nexport const User = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(({ login, history, onUserFindOne, authUserInfo, match }) => {\r\n  useEffect(() => {\r\n    setTimeout(()=>{\r\n      onUserFindOne(login)\r\n    },1000);\r\n    // let object = JSON.parse(localStorage.getItem(\"authUser\"));\r\n    // if (!localStorage.authUser) {\r\n    //   localStorage.setItem(\"authUser\", JSON.stringify(authUserInfo));\r\n    //   user = JSON.parse(localStorage.getItem(\"authUser\"));\r\n    // }\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"auth-user\">\r\n      <UserInfo\r\n        history={history}\r\n        login={login}\r\n        onUserFindOne={onUserFindOne}\r\n        // user={user}\r\n      />\r\n      <Chats login={login} match={match} />\r\n      <SearchUser login={login} onUserFindOne={onUserFindOne} />\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default User;\r\n","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\Chats.js",["157","158","159","160","161","162","163","164","165"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport {\r\n  actionUserFindOne,\r\n  actionGetMessages,\r\n  actionSetMessage,\r\n} from \"../actions/requests\";\r\nimport { checkTwo } from \"../App\";\r\nimport {\r\n  EmojiList,\r\n  youtube,\r\n  emojiSend,\r\n  YOUTUBE_REGEXP,\r\n  EMOJI_REGEXP,\r\n} from \"./emojiList\";\r\nimport Messages from \"./Messages\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSmile } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./styles/user-page.css\";\r\nimport \"./styles/smile-icon--btn.css\";\r\n\r\n// const smileIcon = <FontAwesomeIcon icon={faSmile} size=\"lg\" />;\r\nvar counter = 0;\r\n\r\nconst mapStateToPropsChats = (state) => ({\r\n  state: state,\r\n  message: checkTwo`${state}promiseReducer.oneChatMessages.payload.data.ChatFindOne.messages`,\r\n  allMessages: checkTwo`${state}chatMessagesReducer`,\r\n});\r\nconst mapDispatchToPropsChats = {\r\n  onSendMessage: actionSetMessage,\r\n  onGetMessages: actionGetMessages,\r\n  onUserFindOne: actionUserFindOne,\r\n};\r\n\r\nconst Chats = connect(\r\n  mapStateToPropsChats,\r\n  mapDispatchToPropsChats\r\n)(\r\n  ({\r\n    message,\r\n    allMessages,\r\n    onGetMessages,\r\n    onUserFindOne,\r\n    onSendMessage,\r\n    login,\r\n    match: {\r\n      params: { chatId },\r\n    },\r\n  }) => {\r\n    const [msg, setMsg] = useState(\"\");\r\n\r\n    const [scrollBottom, setScrollBottom] = useState(0);\r\n    const [scrollToBottom, setScrollToBottom] = useState(0);\r\n\r\n    const ref = useRef();\r\n    const refMessage = useRef();\r\n\r\n    useEffect(() => {\r\n      onGetMessages(chatId);\r\n      onUserFindOne(login);\r\n    }, [chatId]);\r\n\r\n    useEffect(() => {\r\n      if (msg === \"\") {\r\n        // Это чтобы после отправки сообщения, окно чата опускалось максимально вниз\r\n        setTimeout(() => {\r\n          ref.current.scrollToBottom();\r\n        }, 500);\r\n      }\r\n    }, [msg]);\r\n\r\n    return (\r\n      // <div className=\"chats-wrapper\">\r\n      <div className=\"chats\">\r\n        <Scrollbars\r\n          universal\r\n          ref={ref}\r\n          thumbSize={150}\r\n          onScroll={() => {\r\n            setScrollToBottom(() => ref.current.getScrollTop());\r\n          }}\r\n        >\r\n          {allMessages &&\r\n            allMessages[chatId] &&\r\n            allMessages[chatId].map((element, index) => (\r\n                (<Messages message={element} key={index.toString()} />)\r\n            ))}\r\n        </Scrollbars>\r\n        <div className=\"scroll-down\">\r\n          <span\r\n            className=\"icon-circle-down\"\r\n            style={{\r\n              visibility: scrollBottom == scrollToBottom ? \"hidden\" : \"visible\",\r\n            }}\r\n            onClick={() => {\r\n              ref.current.scrollToBottom();\r\n              setScrollBottom(() => ref.current.getScrollTop());\r\n            }}\r\n          ></span>\r\n        </div>\r\n        <div className=\"send-message\">\r\n          <input\r\n            id=\"input-message\"\r\n            placeholder=\"Enter Message\"\r\n            value={msg}\r\n            onChange={(e) => setMsg(e.target.value)}\r\n            onKeyPress={(event) => {\r\n              if (event.key === \"Enter\") {\r\n                let msgText = document.querySelector(\"#input-message\");\r\n                setMsg(() => \"\");\r\n                return onSendMessage(chatId, msgText.value);\r\n              }\r\n            }}\r\n          />\r\n          <span\r\n            className=\"icon-happy\"\r\n            onClick={(event) => {\r\n              let eList = document.querySelector(\"#emojiList\");\r\n              counter++;\r\n              if (counter % 2 === 0) {\r\n                eList.style = \"display: none\";\r\n              } else {\r\n                eList.style = \"display: block\";\r\n              }\r\n            }}\r\n          ></span>\r\n          <button\r\n            className=\"send-msg--btn\"\r\n            style={{ cursor: \"pointer\" }}\r\n            // onMouseEnter={() => {\r\n            //   let eList = document.querySelector(\"#emojiList\");\r\n            //   eList.style = \"display: block\";\r\n            // }}\r\n            // onMouseLeave={() => {\r\n            //   let eList = document.querySelector(\"#emojiList\");\r\n            //   eList.style = \"display: none\";\r\n            // }}\r\n            onClick={() => {\r\n              let eList = document.querySelector(\"#emojiList\");\r\n              let msgText = document.querySelector(\"#input-message\");\r\n              eList.style = \"display: none\";\r\n              setMsg(() => \"\");\r\n              return onSendMessage(chatId, msgText.value);\r\n            }}\r\n          >\r\n            Send\r\n          </button>\r\n        </div>\r\n        {/* <div id=\"emojiList\">{emojiArray.map((item, index) => {\r\n          item\r\n        })}</div> */}\r\n        <EmojiList />\r\n      </div>\r\n      // </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Chats;\r\n","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\emojiList.js",["166","167","168","169"],{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"170","replacedBy":"174"},{"ruleId":"172","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":7,"column":10,"nodeType":"178","messageId":"179","endLine":7,"endColumn":14},{"ruleId":"180","severity":1,"message":"181","line":18,"column":1,"nodeType":"182","endLine":38,"endColumn":3},{"ruleId":"170","replacedBy":"183"},{"ruleId":"172","replacedBy":"184"},{"ruleId":"176","severity":1,"message":"185","line":7,"column":10,"nodeType":"178","messageId":"179","endLine":7,"endColumn":15},{"ruleId":"186","severity":1,"message":"187","line":54,"column":6,"nodeType":"188","endLine":54,"endColumn":19,"suggestions":"189"},{"ruleId":"170","replacedBy":"190"},{"ruleId":"172","replacedBy":"191"},{"ruleId":"186","severity":1,"message":"192","line":52,"column":8,"nodeType":"188","endLine":52,"endColumn":16,"suggestions":"193"},{"ruleId":"194","severity":1,"message":"195","line":65,"column":13,"nodeType":"196","endLine":68,"endColumn":14},{"ruleId":"197","severity":1,"message":"198","line":142,"column":37,"nodeType":"199","messageId":"200","endLine":142,"endColumn":39},{"ruleId":"176","severity":1,"message":"201","line":1,"column":17,"nodeType":"178","messageId":"179","endLine":1,"endColumn":25},{"ruleId":"176","severity":1,"message":"202","line":1,"column":27,"nodeType":"178","messageId":"179","endLine":1,"endColumn":36},{"ruleId":"176","severity":1,"message":"203","line":1,"column":38,"nodeType":"178","messageId":"179","endLine":1,"endColumn":44},{"ruleId":"176","severity":1,"message":"201","line":1,"column":17,"nodeType":"178","messageId":"179","endLine":1,"endColumn":25},{"ruleId":"176","severity":1,"message":"202","line":1,"column":27,"nodeType":"178","messageId":"179","endLine":1,"endColumn":36},{"ruleId":"176","severity":1,"message":"204","line":2,"column":18,"nodeType":"178","messageId":"179","endLine":2,"endColumn":23},{"ruleId":"176","severity":1,"message":"205","line":2,"column":25,"nodeType":"178","messageId":"179","endLine":2,"endColumn":29},{"ruleId":"176","severity":1,"message":"206","line":2,"column":31,"nodeType":"178","messageId":"179","endLine":2,"endColumn":37},{"ruleId":"176","severity":1,"message":"207","line":6,"column":20,"nodeType":"178","messageId":"179","endLine":6,"endColumn":27},{"ruleId":"176","severity":1,"message":"208","line":13,"column":3,"nodeType":"178","messageId":"179","endLine":13,"endColumn":10},{"ruleId":"176","severity":1,"message":"209","line":14,"column":3,"nodeType":"178","messageId":"179","endLine":14,"endColumn":12},{"ruleId":"176","severity":1,"message":"210","line":15,"column":3,"nodeType":"178","messageId":"179","endLine":15,"endColumn":17},{"ruleId":"176","severity":1,"message":"211","line":16,"column":3,"nodeType":"178","messageId":"179","endLine":16,"endColumn":15},{"ruleId":"212","severity":1,"message":"213","line":91,"column":28,"nodeType":"188","messageId":"214","endLine":91,"endColumn":52},{"ruleId":"176","severity":1,"message":"215","line":6,"column":10,"nodeType":"178","messageId":"179","endLine":6,"endColumn":28},{"ruleId":"176","severity":1,"message":"185","line":9,"column":10,"nodeType":"178","messageId":"179","endLine":9,"endColumn":15},{"ruleId":"176","severity":1,"message":"216","line":10,"column":10,"nodeType":"178","messageId":"179","endLine":10,"endColumn":14},{"ruleId":"176","severity":1,"message":"217","line":10,"column":16,"nodeType":"178","messageId":"179","endLine":10,"endColumn":21},{"ruleId":"186","severity":1,"message":"187","line":52,"column":6,"nodeType":"188","endLine":52,"endColumn":19,"suggestions":"218"},{"ruleId":"219","severity":1,"message":"220","line":116,"column":11,"nodeType":"196","endLine":116,"endColumn":52},{"ruleId":"176","severity":1,"message":"221","line":2,"column":23,"nodeType":"178","messageId":"179","endLine":2,"endColumn":41},{"ruleId":"176","severity":1,"message":"222","line":101,"column":9,"nodeType":"178","messageId":"179","endLine":101,"endColumn":13},{"ruleId":"176","severity":1,"message":"222","line":131,"column":9,"nodeType":"178","messageId":"179","endLine":131,"endColumn":13},{"ruleId":"176","severity":1,"message":"222","line":161,"column":9,"nodeType":"178","messageId":"179","endLine":161,"endColumn":13},{"ruleId":"176","severity":1,"message":"222","line":186,"column":9,"nodeType":"178","messageId":"179","endLine":186,"endColumn":13},{"ruleId":"176","severity":1,"message":"222","line":240,"column":9,"nodeType":"178","messageId":"179","endLine":240,"endColumn":13},{"ruleId":"176","severity":1,"message":"222","line":328,"column":9,"nodeType":"178","messageId":"179","endLine":328,"endColumn":13},{"ruleId":"176","severity":1,"message":"223","line":1,"column":8,"nodeType":"178","messageId":"179","endLine":1,"endColumn":13},{"ruleId":"170","replacedBy":"224"},{"ruleId":"172","replacedBy":"225"},{"ruleId":"176","severity":1,"message":"226","line":10,"column":10,"nodeType":"178","messageId":"179","endLine":10,"endColumn":19},{"ruleId":"176","severity":1,"message":"208","line":10,"column":21,"nodeType":"178","messageId":"179","endLine":10,"endColumn":28},{"ruleId":"176","severity":1,"message":"210","line":10,"column":30,"nodeType":"178","messageId":"179","endLine":10,"endColumn":44},{"ruleId":"176","severity":1,"message":"227","line":50,"column":12,"nodeType":"178","messageId":"179","endLine":50,"endColumn":21},{"ruleId":"176","severity":1,"message":"228","line":50,"column":23,"nodeType":"178","messageId":"179","endLine":50,"endColumn":35},{"ruleId":"186","severity":1,"message":"229","line":59,"column":8,"nodeType":"188","endLine":59,"endColumn":20,"suggestions":"230"},{"ruleId":"176","severity":1,"message":"201","line":1,"column":17,"nodeType":"178","messageId":"179","endLine":1,"endColumn":25},{"ruleId":"176","severity":1,"message":"231","line":10,"column":5,"nodeType":"178","messageId":"179","endLine":10,"endColumn":9},{"ruleId":"186","severity":1,"message":"192","line":36,"column":6,"nodeType":"188","endLine":36,"endColumn":8,"suggestions":"232"},{"ruleId":"176","severity":1,"message":"208","line":12,"column":3,"nodeType":"178","messageId":"179","endLine":12,"endColumn":10},{"ruleId":"176","severity":1,"message":"209","line":13,"column":3,"nodeType":"178","messageId":"179","endLine":13,"endColumn":12},{"ruleId":"176","severity":1,"message":"210","line":14,"column":3,"nodeType":"178","messageId":"179","endLine":14,"endColumn":17},{"ruleId":"176","severity":1,"message":"211","line":15,"column":3,"nodeType":"178","messageId":"179","endLine":15,"endColumn":15},{"ruleId":"176","severity":1,"message":"233","line":18,"column":10,"nodeType":"178","messageId":"179","endLine":18,"endColumn":25},{"ruleId":"176","severity":1,"message":"234","line":19,"column":10,"nodeType":"178","messageId":"179","endLine":19,"endColumn":17},{"ruleId":"176","severity":1,"message":"235","line":58,"column":11,"nodeType":"178","messageId":"179","endLine":58,"endColumn":21},{"ruleId":"186","severity":1,"message":"236","line":63,"column":8,"nodeType":"188","endLine":63,"endColumn":16,"suggestions":"237"},{"ruleId":"197","severity":1,"message":"198","line":95,"column":40,"nodeType":"199","messageId":"200","endLine":95,"endColumn":42},{"ruleId":"238","severity":1,"message":"239","line":3,"column":97,"nodeType":"240","messageId":"241","endLine":3,"endColumn":98,"suggestions":"242"},{"ruleId":"238","severity":1,"message":"243","line":3,"column":116,"nodeType":"240","messageId":"241","endLine":3,"endColumn":117,"suggestions":"244"},{"ruleId":"238","severity":1,"message":"239","line":4,"column":51,"nodeType":"240","messageId":"241","endLine":4,"endColumn":52,"suggestions":"245"},{"ruleId":"238","severity":1,"message":"243","line":4,"column":70,"nodeType":"240","messageId":"241","endLine":4,"endColumn":71,"suggestions":"246"},"no-native-reassign",["247"],"no-negated-in-lhs",["248"],["247"],["248"],"no-unused-vars","'User' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["247"],["248"],"'check' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'state'. Either include them or remove the dependency array.","ArrayExpression",["249"],["247"],["248"],"React Hook useEffect has missing dependencies: 'login' and 'onUserFindOne'. Either include them or remove the dependency array. If 'onUserFindOne' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["250"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","'connect' is defined but never used.","'youtube' is defined but never used.","'emojiSend' is defined but never used.","'YOUTUBE_REGEXP' is defined but never used.","'EMOJI_REGEXP' is defined but never used.","no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray","'bindActionCreators' is defined but never used.","'Spin' is defined but never used.","'Alert' is defined but never used.",["251"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'actionAuthUserInfo' is defined but never used.","'data' is assigned a value but never used.","'React' is defined but never used.",["247"],["248"],"'EmojiList' is defined but never used.","'chatTitle' is assigned a value but never used.","'setChatTitle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onFindChats' and 'userId'. Either include them or remove the dependency array. If 'onFindChats' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["252"],"'user' is defined but never used.",["253"],"'FontAwesomeIcon' is defined but never used.","'faSmile' is defined but never used.","'refMessage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'login', 'onGetMessages', and 'onUserFindOne'. Either include them or remove the dependency array. If 'onGetMessages' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["254"],"no-useless-escape","Unnecessary escape character: \\_.","Literal","unnecessaryEscape",["255","256"],"Unnecessary escape character: \\?.",["257","258"],["259","260"],["261","262"],"no-global-assign","no-unsafe-negation",{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"263","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"messageId":"274","fix":"275","desc":"276"},{"messageId":"277","fix":"278","desc":"279"},{"messageId":"274","fix":"280","desc":"276"},{"messageId":"277","fix":"281","desc":"279"},{"messageId":"274","fix":"282","desc":"276"},{"messageId":"277","fix":"283","desc":"279"},{"messageId":"274","fix":"284","desc":"276"},{"messageId":"277","fix":"285","desc":"279"},"Update the dependencies array to be: [id, failure, history, state]",{"range":"286","text":"287"},"Update the dependencies array to be: [login, onUserFindOne, upload]",{"range":"288","text":"289"},{"range":"290","text":"287"},"Update the dependencies array to be: [chatCreate, onFindChats, userId]",{"range":"291","text":"292"},"Update the dependencies array to be: [login, onUserFindOne]",{"range":"293","text":"294"},"Update the dependencies array to be: [chatId, login, onGetMessages, onUserFindOne]",{"range":"295","text":"296"},"removeEscape",{"range":"297","text":"298"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"299","text":"300"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"301","text":"298"},{"range":"302","text":"300"},{"range":"303","text":"298"},{"range":"304","text":"300"},{"range":"305","text":"298"},{"range":"306","text":"300"},[1442,1455],"[id, failure, history, state]",[1464,1472],"[login, onUserFindOne, upload]",[1641,1654],[1636,1648],"[chatCreate, onFindChats, userId]",[1217,1219],"[login, onUserFindOne]",[1671,1679],"[chatId, login, onGetMessages, onUserFindOne]",[132,133],"",[132,132],"\\",[151,152],[151,151],[217,218],[217,217],[236,237],[236,236]]