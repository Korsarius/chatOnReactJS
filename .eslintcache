[{"C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\App.js":"1","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\index.js":"2","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\reducers\\allReducers.js":"3","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\actions\\authorization.js":"4","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\index.js":"5","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\reducers\\AuthReducer.js":"6","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\reducers\\promiseReducer.js":"7","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\reducers\\chatMessagesReducer.js":"8","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\reducers\\chatCreateReducer.js":"9","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\LoginForm.js":"10","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\RegistrationForm.js":"11","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\Auth.js":"12","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\Chats.js":"13","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\SearchUser.js":"14","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\actions\\chatMessages.js":"15","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\MyPortal.js":"16","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\UserInfo.js":"17","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\serviceWorker.js":"18","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\actions\\requests.js":"19","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\ModalWindowCreateChat.js":"20","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\actions\\chatCreate.js":"21","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\emojiList.js":"22","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\actions\\promiseActions.js":"23"},{"size":2919,"mtime":1610196417514,"results":"24","hashOfConfig":"25"},{"size":503,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":396,"mtime":1605970584385,"results":"27","hashOfConfig":"25"},{"size":176,"mtime":1609776115824,"results":"28","hashOfConfig":"25"},{"size":1053,"mtime":1610552631820,"results":"29","hashOfConfig":"25"},{"size":568,"mtime":1609783858661,"results":"30","hashOfConfig":"25"},{"size":385,"mtime":1602098567214,"results":"31","hashOfConfig":"25"},{"size":351,"mtime":1605027423042,"results":"32","hashOfConfig":"25"},{"size":1579,"mtime":1606398001761,"results":"33","hashOfConfig":"25"},{"size":4164,"mtime":1610552729396,"results":"34","hashOfConfig":"25"},{"size":4648,"mtime":1610552658837,"results":"35","hashOfConfig":"25"},{"size":1539,"mtime":1610186703347,"results":"36","hashOfConfig":"25"},{"size":5440,"mtime":1610549548275,"results":"37","hashOfConfig":"25"},{"size":4973,"mtime":1610194191819,"results":"38","hashOfConfig":"25"},{"size":213,"mtime":1606407939467,"results":"39","hashOfConfig":"25"},{"size":450,"mtime":1603283508976,"results":"40","hashOfConfig":"25"},{"size":4675,"mtime":1610552816232,"results":"41","hashOfConfig":"25"},{"size":5086,"mtime":499162500000,"results":"42","hashOfConfig":"25"},{"size":10948,"mtime":1609782284927,"results":"43","hashOfConfig":"25"},{"size":6275,"mtime":1608371934468,"results":"44","hashOfConfig":"25"},{"size":995,"mtime":1606408071170,"results":"45","hashOfConfig":"25"},{"size":45248,"mtime":1610549598547,"results":"46","hashOfConfig":"25"},{"size":947,"mtime":1606408235189,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"dt7ym5",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"67"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"51"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"51"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"67"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"100"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"54"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\App.js",["114","115","116","117","118","119","120","121","122","123","124"],"import React, { useState, useEffect } from \"react\";\nimport { Router, Route, Link, Switch } from \"react-router-dom\";\n// import createHistory from \"history/createBrowserHistory\";\nimport { createBrowserHistory } from \"history\";\nimport Routes from \"./components\";\nimport { Provider, connect } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport reducers from \"./reducers/allReducers\";\nimport { actionToken } from \"./actions/authorization\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  youtube,\n  emojiSend,\n  YOUTUBE_REGEXP,\n  EMOJI_REGEXP,\n} from \"./components/emojiList\";\nimport \"./App.css\";\n\n// SOCKET.IO\n\nimport io from \"socket.io-client\";\nimport { actionSaveMessages } from \"./actions/chatMessages\";\n// import { store } from \"../App\";\n\nconst socket = io(\"http://chat.fs.a-level.com.ua/\");\nif (localStorage.authToken) socket.emit(\"jwt\", localStorage.authToken);\n\nsocket.on(\"jwt_ok\", (data) => console.log(data));\nsocket.on(\"jwt_fail\", (error) => console.log(error));\nsocket.on(\"msg\", (msg) => {\n  console.log(msg);\n  // if (YOUTUBE_REGEXP.test(msg.text)) {\n  //   msg.text = youtube(msg.text);\n  return store.dispatch(\n    actionSaveMessages([msg], msg.chat._id, msg.chat.title)\n  );\n});\n\n// export default socket;\n\n// SOCKET.IO END\n\nconst GETGQL = (url, headers = {}) => (query = \"\", variables = {}) =>\n  fetch(url, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      ...headers,\n    },\n    body: JSON.stringify({\n      query,\n      variables,\n    }),\n  }).then((res) => res.json());\n\n// const originalFetch = fetch;\n// fetch = (\n//   url,\n//   params = {\n//     headers: {},\n//   }\n// ) => {\n//   params.headers.Authorization = \"Bearer \" + localStorage.authToken;\n//   return originalFetch(url, params);\n// };\n\nexport const GQL = GETGQL(\"/graphql\", {\n  Authorization: \"Bearer \" + localStorage.authToken,\n});\n\nconst history = createBrowserHistory();\n\nexport let check = function ({ 1: path }, obj) {\n  path = path.split(\".\");\n  for (let i of path) {\n    if (!obj[i]) {\n      return obj;\n    } else {\n      obj = obj[i];\n    }\n  }\n  return obj;\n};\n\nexport let checkTwo = ({ 1: path }, obj, key, restOfPath) =>\n  !path\n    ? obj\n    : (([key, ...restOfPath] = path.split(\".\")),\n      obj[key] && checkTwo([, restOfPath.join(\".\")], obj[key]));\n\nexport const store = createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nif (localStorage.authToken) {\n  store.dispatch(actionToken(localStorage.authToken));\n  // store.dispatch(actionUserFindOne(store.getState().state.AuthReducer.data.sub.login));\n}\n\nstore.subscribe(() => console.log(store.getState()));\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <Provider store={store}>\n        <Routes history={history} />\n      </Provider>\n    </Router>\n  );\n}\n\nexport default App;\n",["125","126"],"C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\index.js",[],["127","128"],"C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\reducers\\allReducers.js",[],"C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\actions\\authorization.js",[],"C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\index.js",["129","130"],"import React from \"react\";\r\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\r\n\r\nimport LoginForm from \"./LoginForm\";\r\nimport RegistrationForm from \"./RegistrationForm\";\r\nimport Auth from \"./Auth\";\r\nimport { User } from \"./Auth\";\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <div>\r\n      <h1>Main Page</h1>\r\n      <Link to={`/myproject/login`}>Sign in</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path=\"/myproject\" component={MainPage} />\r\n      <Route exact path=\"/myproject/login\" render={(props) => <LoginForm {...props} />} />\r\n      <Route\r\n        exact\r\n        path=\"/myproject/registration\"\r\n        render={(props) => <RegistrationForm {...props} />}\r\n      />\r\n      <Route\r\n        path=\"/myproject/auth/userId=:userId?&chatId=:chatId?\"\r\n        render={(props) => <Auth {...props} />}\r\n      />\r\n      <Route\r\n        path=\"/myproject/auth/userId=:userId?\"\r\n        render={(props) => <Auth {...props} />}\r\n      />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n",["131","132"],"C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\reducers\\AuthReducer.js",[],"C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\reducers\\promiseReducer.js",[],["133","134"],"C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\reducers\\chatMessagesReducer.js",[],["135","136"],"C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\reducers\\chatCreateReducer.js",[],"C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\LoginForm.js",["137","138","139","140","141","142"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, Button, Checkbox } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { actionLogin, actionUserFindOne } from \"../actions/requests\";\r\nimport { actionPromise } from \"../actions/promiseActions\";\r\nimport { check, checkTwo } from \"../App\";\r\nimport { Spin, Alert } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"../App.css\";\r\nimport \"./styles/login-form.css\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  token: checkTwo`${state}promiseReducer.payload.data.login`,\r\n  state: state,\r\n  id: checkTwo`${state}AuthReducer.data.sub.id`,\r\n  failure: checkTwo`${state}promiseReducer.userLogin.error`,\r\n});\r\nconst mapDispatchToProps = {\r\n  onLogin: actionLogin,\r\n  onPromise: actionPromise,\r\n  onUserFind: actionUserFindOne,\r\n};\r\n\r\nconst NormalLoginForm = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(({ onLogin, history, state, id, failure }) => {\r\n  const [login, setLogin] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [error, setError] = useState(false);\r\n  const onFinish = (values) => {\r\n    console.log(\"Received values of form: \", values);\r\n  };\r\n\r\n  // const [spin, setSpin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      setTimeout(\r\n        () =>\r\n          history.push(\r\n            `/myproject/auth/userId=${checkTwo`${state}AuthReducer.data.sub.id`}`\r\n          ),\r\n        2000\r\n      );\r\n    } else if (failure) {\r\n      setError(() => true);\r\n    }\r\n  }, [id, failure]);\r\n\r\n  return (\r\n    <section className=\"LoginForm\">\r\n      <Form\r\n        name=\"normal_login\"\r\n        className=\"login-form\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n      >\r\n        <h1> Sign in to Chat </h1>\r\n        <span\r\n          className=\"error-value\"\r\n          style={{\r\n            visibility: error ? \"visible\" : \"hidden\",\r\n          }}\r\n        >\r\n          Incorrect username or password.\r\n        </span>\r\n        <Form.Item\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Username!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Login\"\r\n            value={login}\r\n            onChange={(e) => setLogin(e.target.value)}\r\n            style={{\r\n              color: error ? \"red\" : \"black\",\r\n            }}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Password!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            style={{\r\n              color: error ? \"red\" : \"black\",\r\n            }}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n            <Checkbox> Remember me </Checkbox>\r\n          </Form.Item>\r\n          <a className=\"login-form-forgot\" href=\"\">\r\n            Forgot password\r\n          </a>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button\r\n            onClick={() => {\r\n              onLogin(login, password);\r\n              // setSpin(() => true);\r\n            }}\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            id=\"log-in\"\r\n            className=\"login-form-button\"\r\n          >\r\n            Log in\r\n          </Button>\r\n          Or <Link to={`/myproject/registration`}> register now! </Link>\r\n        </Form.Item>\r\n      </Form>\r\n      {/* {spin && <Spin tip=\"Loading...\" size=\"large\" /> && setTimeout(()=>{setSpin(() => true)},2000)} */}\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default NormalLoginForm;\r\n","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\RegistrationForm.js",["143","144"],"import React, { useState, useEffect } from \"react\";\r\nimport { Input, Button, Form, Tooltip } from \"antd\";\r\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\r\nimport { actionRegistration } from \"../actions/requests\";\r\nimport { actionLogout } from \"../actions/authorization\";\r\nimport { connect } from \"react-redux\";\r\nimport { check, checkTwo } from \"../App\";\r\nimport \"../App.css\";\r\nimport \"./styles/registration-form.css\";\r\n\r\nactionLogout();\r\n\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst RegisterFormTwo = connect(\r\n  (state) => ({\r\n    state: state,\r\n    id: checkTwo`${state}AuthReducer.data.sub.id`,\r\n    failure: checkTwo`${state}promiseReducer.regitration.error`,\r\n  }),\r\n  {\r\n    onRegistration: actionRegistration,\r\n  }\r\n)(({ state, onRegistration, history, id, failure }) => {\r\n  const [login, setLogin] = useState(\"\");\r\n  const [nick, setNick] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      setTimeout(\r\n        () =>\r\n          history.push(\r\n            `/myproject/auth/userId=${checkTwo`${state}AuthReducer.data.sub.id`}`\r\n          ),\r\n        2000\r\n      );\r\n    } else if (failure) {\r\n      setError(() => true);\r\n    }\r\n  }, [id, failure]);\r\n\r\n  return (\r\n    <section className=\"RegistrationForm\">\r\n      <Form>\r\n        <h1> Registration </h1>\r\n        <span\r\n          className=\"error-value\"\r\n          style={{\r\n            visibility: error ? \"visible\" : \"hidden\",\r\n          }}\r\n        >\r\n          User {login} already exists\r\n        </span>\r\n        <Form.Item\r\n          name=\"login\"\r\n          label=\"Login\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Login\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input value={login} onChange={(e) => setLogin(e.target.value)} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your password!\",\r\n            },\r\n          ]}\r\n          hasFeedback\r\n        >\r\n          <Input.Password\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"Confirm Password\"\r\n          dependencies={[\"password\"]}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please confirm your password!\",\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(rule, value) {\r\n                if (!value || getFieldValue(\"password\") === value) {\r\n                  return Promise.resolve();\r\n                }\r\n\r\n                return Promise.reject(\r\n                  \"The two passwords that you entered do not match!\"\r\n                );\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"nickname\"\r\n          label={\r\n            <span>\r\n              Nickname &nbsp;\r\n              <Tooltip title=\"What do you want others to call you?\">\r\n                <QuestionCircleOutlined />\r\n              </Tooltip>\r\n            </span>\r\n          }\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your nickname!\",\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input value={nick} onChange={(e) => setNick(e.target.value)} />\r\n        </Form.Item>\r\n        <Form.Item {...tailFormItemLayout}>\r\n          <Button\r\n            style={{ width: \"100%\" }}\r\n            onClick={() => {\r\n              onRegistration(login, password, nick);\r\n            }}\r\n            disabled={\r\n              login.length <= 2 ||\r\n              login.length > 35 ||\r\n              password !== confirmPassword ||\r\n              nick.length <= 2 ||\r\n              nick.length > 15\r\n                ? true\r\n                : false\r\n            }\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n          >\r\n            Register\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default RegisterFormTwo;\r\n","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\Auth.js",["145","146","147"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { actionUserFindOne } from \"../actions/requests\";\r\nimport { checkTwo } from \"../App\";\r\nimport UserInfo from \"../components/UserInfo\";\r\nimport Chats from \"../components/Chats\";\r\nimport SearchUser from \"../components/SearchUser\";\r\nimport \"./styles/user-page.css\";\r\n\r\nvar user;\r\n\r\nconst mapStateToProps = (state) => ({\r\n  token: state && state.AuthReducer && state.AuthReducer.token,\r\n  login: checkTwo`${state}AuthReducer.data.sub.login`,\r\n  authUserInfo: checkTwo`${state}promiseReducer.userFindOne.payload.data.UserFindOne`,\r\n  media: state,\r\n  state: state,\r\n});\r\nconst mapDispatchToProps = {\r\n  onUserFindOne: actionUserFindOne,\r\n};\r\n\r\nexport const User = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(({ login, history, onUserFindOne, authUserInfo, match }) => {\r\n  useEffect(() => {\r\n    onUserFindOne(login);\r\n    // let object = JSON.parse(localStorage.getItem(\"authUser\"));\r\n    // if (!localStorage.authUser) {\r\n    //   localStorage.setItem(\"authUser\", JSON.stringify(authUserInfo));\r\n    //   user = JSON.parse(localStorage.getItem(\"authUser\"));\r\n    // }\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"auth-user\">\r\n      <UserInfo\r\n        history={history}\r\n        login={login}\r\n        onUserFindOne={onUserFindOne}\r\n        // user={user}\r\n      />\r\n      <Chats login={login} match={match} />\r\n      <SearchUser login={login} onUserFindOne={onUserFindOne} />\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default User;\r\n","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\Chats.js",["148","149","150","151","152","153"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport {\r\n  actionUserFindOne,\r\n  actionGetMessages,\r\n  actionSetMessage,\r\n} from \"../actions/requests\";\r\nimport { checkTwo } from \"../App\";\r\nimport {\r\n  EmojiList,\r\n  youtube,\r\n  emojiSend,\r\n  YOUTUBE_REGEXP,\r\n  EMOJI_REGEXP,\r\n} from \"./emojiList\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSmile } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./styles/user-page.css\";\r\nimport \"./styles/smile-icon--btn.css\";\r\n\r\n// const smileIcon = <FontAwesomeIcon icon={faSmile} size=\"lg\" />;\r\nvar counter = 0;\r\n\r\nconst mapStateToPropsChats = (state) => ({\r\n  state: state,\r\n  message: checkTwo`${state}promiseReducer.oneChatMessages.payload.data.ChatFindOne.messages`,\r\n  allMessages: checkTwo`${state}chatMessagesReducer`,\r\n});\r\nconst mapDispatchToPropsChats = {\r\n  onSendMessage: actionSetMessage,\r\n  onGetMessages: actionGetMessages,\r\n  onUserFindOne: actionUserFindOne,\r\n};\r\n\r\nconst Chats = connect(\r\n  mapStateToPropsChats,\r\n  mapDispatchToPropsChats\r\n)(\r\n  ({\r\n    message,\r\n    allMessages,\r\n    onGetMessages,\r\n    onUserFindOne,\r\n    onSendMessage,\r\n    login,\r\n    match: {\r\n      params: { chatId },\r\n    },\r\n  }) => {\r\n    const [msg, setMsg] = useState(\"\");\r\n\r\n    const [scrollBottom, setScrollBottom] = useState(0);\r\n    const [scrollToBottom, setScrollToBottom] = useState(0);\r\n\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n      onGetMessages(chatId);\r\n      onUserFindOne(login);\r\n    }, [chatId]);\r\n\r\n    useEffect(() => {\r\n      if (msg === \"\") {\r\n        // Это чтобы после отправки сообщения, окно чата опускалось максимально вниз\r\n        setTimeout(() => {\r\n          ref.current.scrollToBottom();\r\n        }, 500);\r\n      }\r\n    }, [msg]);\r\n\r\n    return (\r\n      // <div className=\"chats-wrapper\">\r\n      <div className=\"chats\">\r\n        <Scrollbars\r\n          universal\r\n          ref={ref}\r\n          thumbSize={150}\r\n          onScroll={() => {\r\n            setScrollToBottom(() => ref.current.getScrollTop());\r\n          }}\r\n        >\r\n          {allMessages &&\r\n            allMessages[chatId] &&\r\n            allMessages[chatId].map((element, index) => (\r\n              // element.text === YOUTUBE_REGEXP ? youtube(element.text) : (\r\n              <p className=\"message\">\r\n                <span className=\"message-nick\">{element.owner.nick}: </span>\r\n                {/* {element.text} */}\r\n                {EMOJI_REGEXP.test(element.text)\r\n                  ? (element.text = emojiSend(element.text))\r\n                  : element.text}\r\n                <span className=\"message-data\">\r\n                  {new RegExp(/(-+)|(:+)/gi).test(element.createdAt)\r\n                    ? new Date(element.createdAt).toLocaleString()\r\n                    : new Date(+element.createdAt).toLocaleString()}\r\n                </span>\r\n              </p>\r\n              // )\r\n            ))}\r\n        </Scrollbars>\r\n        <div className=\"scroll-down\">\r\n          <span\r\n            className=\"icon-circle-down\"\r\n            style={{\r\n              visibility: scrollBottom == scrollToBottom ? \"hidden\" : \"visible\",\r\n            }}\r\n            onClick={() => {\r\n              ref.current.scrollToBottom();\r\n              setScrollBottom(() => ref.current.getScrollTop());\r\n            }}\r\n          ></span>\r\n        </div>\r\n        <div className=\"send-message\">\r\n          <input\r\n            id=\"input-message\"\r\n            placeholder=\"Enter Message\"\r\n            value={msg}\r\n            onChange={(e) => setMsg(e.target.value)}\r\n            onKeyPress={(event) => {\r\n              if (event.key === \"Enter\") {\r\n                let msgText = document.querySelector(\"#input-message\");\r\n                setMsg(() => \"\");\r\n                return onSendMessage(chatId, msgText.value);\r\n              }\r\n            }}\r\n          />\r\n          <span\r\n            class=\"icon-happy\"\r\n            onClick={(event) => {\r\n              let eList = document.querySelector(\"#emojiList\");\r\n              counter++;\r\n              if (counter % 2 === 0) {\r\n                eList.style = \"display: none\";\r\n              } else {\r\n                eList.style = \"display: block\";\r\n              }\r\n            }}\r\n          ></span>\r\n          <button\r\n            className=\"send-msg--btn\"\r\n            style={{ cursor: \"pointer\" }}\r\n            // onMouseEnter={() => {\r\n            //   let eList = document.querySelector(\"#emojiList\");\r\n            //   eList.style = \"display: block\";\r\n            // }}\r\n            // onMouseLeave={() => {\r\n            //   let eList = document.querySelector(\"#emojiList\");\r\n            //   eList.style = \"display: none\";\r\n            // }}\r\n            onClick={() => {\r\n              let eList = document.querySelector(\"#emojiList\");\r\n              let msgText = document.querySelector(\"#input-message\");\r\n              eList.style = \"display: none\";\r\n              setMsg(() => \"\");\r\n              return onSendMessage(chatId, msgText.value);\r\n            }}\r\n          >\r\n            Send\r\n          </button>\r\n        </div>\r\n        {/* <div id=\"emojiList\">{emojiArray.map((item, index) => {\r\n          item\r\n        })}</div> */}\r\n        <EmojiList />\r\n      </div>\r\n      // </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Chats;\r\n",["154","155"],"C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\SearchUser.js",["156","157","158","159","160","161","162"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Input, Button } from \"antd\";\r\nimport {\r\n  actionUserFindOneOnLogin,\r\n  actionCreateChat,\r\n  actionFindAllChats,\r\n  actionChatWithSelectedUser,\r\n} from \"../actions/requests\";\r\nimport { EmojiList, youtube, YOUTUBE_REGEXP } from \"./emojiList\";\r\nimport { checkTwo } from \"../App\";\r\nimport Modal from \"../components/ModalWindowCreateChat\";\r\nimport \"./styles/user-page.css\";\r\n\r\nfunction generateColor() {\r\n  return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\r\n}\r\n\r\nlet randomColor = generateColor();\r\n\r\nconst SearchUser = connect(\r\n  (state) => ({\r\n    state: state,\r\n    foundUser: checkTwo`${state}promiseReducer.userFindOneOnLogin.payload.data.UserFindOne`,\r\n    userId: checkTwo`${state}AuthReducer.data.sub.id`,\r\n    chat: checkTwo`${state}promiseReducer.createChat.payload.data.ChatUpsert`,\r\n  }),\r\n  {\r\n    onChatWithSelectedUser: actionChatWithSelectedUser,\r\n    findUserByLogin: actionUserFindOneOnLogin,\r\n    onChatCreate: actionCreateChat,\r\n    onFindChats: actionFindAllChats,\r\n  }\r\n)(\r\n  ({\r\n    findUserByLogin,\r\n    foundUser,\r\n    state,\r\n    onChatWithSelectedUser,\r\n    onChatCreate,\r\n    login,\r\n    userId,\r\n    chat,\r\n    onUserFindOne,\r\n    onFindChats,\r\n  }) => {\r\n    const [nick, setNick] = useState(\"\");\r\n    const [find, setFind] = useState(false);\r\n\r\n    const [chatTitle, setChatTitle] = useState(\"\");\r\n    const [chatCreate, setCreate] = useState(false);\r\n\r\n    let updateModal = function (bool) {\r\n      setCreate(() => bool);\r\n    };\r\n\r\n    useEffect(() => {\r\n      onFindChats(userId);\r\n    }, [chatCreate]);\r\n\r\n    return (\r\n      <div className=\"search\">\r\n        {chatCreate && (\r\n          <Modal\r\n            userId={userId}\r\n            login={login}\r\n            updateModal={updateModal}\r\n            findUserByLogin={findUserByLogin}\r\n          />\r\n        )}\r\n        <div className=\"create-chat\">\r\n          <h3>Create Chat</h3>\r\n          <Button\r\n            id=\"search-button\"\r\n            onClick={() => {\r\n              setCreate(() => true);\r\n            }}\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            Create Chat\r\n          </Button>\r\n        </div>\r\n        <h3>Search User</h3>\r\n        <Input\r\n          id=\"search-input\"\r\n          placeholder=\"Enter User Login\"\r\n          value={nick}\r\n          onChange={(e) => setNick(e.target.value)}\r\n        ></Input>\r\n        <Button\r\n          id=\"search-button\"\r\n          onClick={() => {\r\n            findUserByLogin(nick);\r\n            setFind(true);\r\n          }}\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          className=\"login-form-button\"\r\n        >\r\n          Search\r\n        </Button>\r\n        <div className=\"user-found\">\r\n          <ul>\r\n            {find && foundUser ? (\r\n              <>\r\n                <li>\r\n                  {foundUser && foundUser.avatar && foundUser.avatar.url ? (\r\n                    <img\r\n                      id=\"avatarka-user-search\"\r\n                      src={`/${foundUser.avatar.url}`}\r\n                    ></img>\r\n                  ) : (\r\n                    <span\r\n                      id=\"random-color\"\r\n                      style={{ backgroundColor: `${randomColor}` }}\r\n                    >\r\n                      <span>{foundUser.login.substr(0, 2)}</span>\r\n                    </span>\r\n                  )}\r\n                </li>\r\n                <li>\r\n                  <span className=\"menu-item-name\">Login: </span>\r\n                  <button\r\n                    className=\"write-to-user\"\r\n                    datatitle=\"Write Him\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() =>\r\n                      onChatWithSelectedUser(\r\n                        foundUser.login,\r\n                        state.AuthReducer.data.sub.id,\r\n                        foundUser._id\r\n                      )\r\n                    }\r\n                  >\r\n                    {foundUser.login}\r\n                  </button>\r\n                </li>\r\n                <li>\r\n                  <span className=\"menu-item-name\">Nick: </span>\r\n                  {foundUser.nick !== null ? foundUser.nick : `\\u2013`}\r\n                </li>\r\n                <li>\r\n                  <span className=\"menu-item-name\">Registration date: </span>\r\n                  {new Date(+foundUser.createdAt).toLocaleString()}\r\n                </li>\r\n              </>\r\n            ) : (\r\n              find && (\r\n                <span\r\n                  style={{\r\n                    color: \"red\",\r\n                    textAlign: \"center\",\r\n                    backgroundColor: \"white\",\r\n                  }}\r\n                >\r\n                  Not Found\r\n                </span>\r\n              )\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default SearchUser;\r\n","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\actions\\chatMessages.js",[],"C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\MyPortal.js",["163"],"import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nclass MyPortal extends Component {\r\n  el = document.createElement(\"div\");\r\n\r\n  componentDidMount() {\r\n    document.body.appendChild(this.el);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.body.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    return ReactDOM.createPortal(children, this.el);\r\n  }\r\n}\r\n\r\nexport default MyPortal;\r\n","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\UserInfo.js",["164","165","166"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport { Button } from \"antd\";\r\nimport { actionUpload } from \"../actions/requests\";\r\nimport { actionLogout } from \"../actions/authorization\";\r\nimport { checkTwo } from \"../App\";\r\nimport \"./styles/user-page.css\";\r\n\r\nfunction generateColor() {\r\n  return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\r\n}\r\n\r\nlet randomColor = generateColor();\r\n\r\nconst UserInfo = connect(\r\n  (state) => ({\r\n    state: state,\r\n    // user: JSON.parse(localStorage.getItem(\"authUser\")) || checkTwo`${state}promiseReducer.userFindOne.payload.data.UserFindOne`,\r\n    user: checkTwo`${state}promiseReducer.userFindOne.payload.data.UserFindOne`,\r\n    userId: checkTwo`${state}promiseReducer.userFindOne.payload.data.UserFindOne._id`,\r\n  }),\r\n  {\r\n    onUpload: actionUpload,\r\n    onLogout: actionLogout,\r\n  }\r\n)(\r\n  ({\r\n    state,\r\n    login,\r\n    onLogout,\r\n    history,\r\n    // user,\r\n    userId,\r\n    onUserFindOne,\r\n    onUpload,\r\n    user,\r\n  }) => {\r\n    const [upload, setMedia] = useState(false);\r\n\r\n    const [scrollTop, setScrollTop] = useState(0);\r\n    const [scrollToTop, setScrollToTop] = useState(0);\r\n\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n      onUserFindOne(login);\r\n    }, [upload]);\r\n\r\n    return (\r\n      <div className=\"user-info\">\r\n        <Scrollbars\r\n          universal\r\n          ref={ref}\r\n          thumbSize={150}\r\n          onScroll={() => {\r\n            setScrollToTop(() => ref.current.getScrollTop());\r\n          }}\r\n        >\r\n          {(checkTwo`${state}promiseReducer.userFindOne.payload.data.UserFindOne.avatar` && (\r\n            <img\r\n              id=\"avatarka\"\r\n              src={`/${checkTwo`${state}promiseReducer.userFindOne.payload.data.UserFindOne.avatar.url`}`}\r\n            ></img>\r\n          )) || (\r\n            <span\r\n              id=\"random-color\"\r\n              style={{ backgroundColor: `${randomColor}` }}\r\n            >\r\n              <span>{login.substr(0, 2)}</span>\r\n            </span>\r\n          )}\r\n          <h1>{login}</h1>\r\n          <Button\r\n            id=\"log-out\"\r\n            onClick={() => {\r\n              onLogout();\r\n              history.push(\"/myproject/login\");\r\n            }}\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            Log Out\r\n          </Button>\r\n          <span className=\"menu-item-name\">Сменить аватар</span>\r\n          <form\r\n            action=\"/upload\"\r\n            method=\"post\"\r\n            encType=\"multipart/form-data\"\r\n            ref={ref}\r\n          >\r\n            <input\r\n              type=\"file\"\r\n              name=\"media\"\r\n              onChange={() => {\r\n                console.log(ref.current);\r\n                onUpload(ref.current, userId);\r\n                setMedia(!upload);\r\n              }}\r\n            />\r\n          </form>\r\n          <ul>\r\n            {user ? (\r\n              <>\r\n                <li id=\"user-nick\">\r\n                  <span className=\"menu-item-name\">Nick: </span>\r\n                  {user.nick}\r\n                </li>\r\n                <li id=\"user-reg-date\">\r\n                  <span className=\"menu-item-name\">Registration date: </span>\r\n                  {new Date(+user.createdAt).toLocaleString()}\r\n                </li>\r\n                {user.chats\r\n                  ? user.chats.map((el, index) => (\r\n                      <Link\r\n                        to={`/myproject/auth/userId=${state.AuthReducer.data.sub.id}&chatId=${el._id}`}\r\n                        key={el._id}\r\n                      >\r\n                        <li id={el[\"title\"]}>\r\n                          <button className=\"ant-btn ant-btn-primary login-form-button\">\r\n                            {el[\"title\"] !== \"\" ? el[\"title\"] : \"unnamed\"}\r\n                          </button>\r\n                        </li>\r\n                      </Link>\r\n                    ))\r\n                  : \"\"}\r\n              </>\r\n            ) : (\r\n              <span>Error</span>\r\n            )}\r\n          </ul>\r\n        </Scrollbars>\r\n        <div className=\"scroll-up\">\r\n          <span\r\n            className=\"icon-circle-up\"\r\n            style={{\r\n              visibility: scrollTop == scrollToTop ? \"hidden\" : \"visible\",\r\n            }}\r\n            onClick={() => {\r\n              ref.current.scrollToTop();\r\n              setScrollTop(() => ref.current.getScrollTop());\r\n            }}\r\n          ></span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default UserInfo;\r\n",["167","168"],"C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\serviceWorker.js",[],["169","170"],"C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\actions\\requests.js",["171","172","173","174","175","176","177"],"import { GQL } from \"../App\";\r\nimport { actionToken, actionAuthUserInfo } from \"./authorization\";\r\nimport { actionSaveMessages } from \"./chatMessages\";\r\nimport { actionRejected, actionPromise } from \"./promiseActions\";\r\n\r\nexport function actionLogin(login, password) {\r\n  return async function (dispatch) {\r\n    let data = await dispatch(\r\n      actionPromise(\r\n        \"userLogin\",\r\n        GQL(\r\n          `query login($login:String, $password:String){\r\n    login(\r\n      login:$login, password:$password)\r\n  }`,\r\n          {\r\n            login,\r\n            password,\r\n          }\r\n        )\r\n      )\r\n    );\r\n    if (data.data.login == null) {\r\n      await dispatch(\r\n        actionRejected(\"userLogin\", new SyntaxError(\"Данные некорректны\"))\r\n      );\r\n      return;\r\n    }\r\n    console.log(data.data.login);\r\n    await dispatch(actionToken(data.data.login));\r\n    await dispatch(actionUserFindOne(login));\r\n  };\r\n}\r\n\r\nexport function actionUserFindOne(login) {\r\n  return async function (dispatch) {\r\n    let data = await dispatch(\r\n      actionPromise(\r\n        \"userFindOne\",\r\n        GQL(\r\n          `query UserInfo($query:String){\r\n            UserFindOne(query: $query){\r\n              _id\r\n              createdAt\r\n              login\r\n              nick\r\n              avatar{\r\n                url\r\n                originalFileName\r\n              }\r\n              chats{\r\n                _id\r\n                title\r\n                members{\r\n                  login\r\n                }\r\n              }\r\n            }\r\n          }`,\r\n          { query: JSON.stringify([{ login: login }]) }\r\n        )\r\n      )\r\n    );\r\n    console.log(\"data: \", data);\r\n    // await dispatch(actionAuthUserInfo(data.data.UserFindOne));\r\n  };\r\n}\r\n\r\nexport function actionRegistration(login, password, nick) {\r\n  return async function (dispatch) {\r\n    let data = await dispatch(\r\n      actionPromise(\r\n        \"regitration\",\r\n        GQL(\r\n          `mutation registration($user:UserInput){\r\n            UserUpsert(user:$user){\r\n              _id login nick\r\n            }\r\n          }`,\r\n          { user: { login: login, password: password, nick: nick } }\r\n        )\r\n      )\r\n    );\r\n    console.log(data);\r\n    if (data.errors) {\r\n      await dispatch(\r\n        actionRejected(\"regitration\", new SyntaxError(\"Данные некорректны\"))\r\n      );\r\n      return;\r\n    } else {\r\n      if (data.data.UserUpsert.login) {\r\n        console.log(\"data.data.UserUpsert.login: \", data.data.UserUpsert.login);\r\n        await dispatch(actionLogin(data.data.UserUpsert.login, password));\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport function actionUserFindOneOnLogin(login) {\r\n  return async function (dispatch) {\r\n    let data = await dispatch(\r\n      actionPromise(\r\n        \"userFindOneOnLogin\",\r\n        GQL(\r\n          `query UserInfo($query:String){\r\n            UserFindOne(query: $query){\r\n              _id\r\n              createdAt\r\n              login\r\n              nick\r\n              avatar{\r\n                url\r\n              }\r\n              chats{\r\n                title\r\n                members{\r\n                  login\r\n                }\r\n              }\r\n            }\r\n          }`,\r\n          { query: JSON.stringify([{ login: login }]) }\r\n        )\r\n      )\r\n    );\r\n  };\r\n}\r\n\r\nexport function actionUserFindOneOnLoginForCreatChat(login) {\r\n  return async function (dispatch) {\r\n    let data = await dispatch(\r\n      actionPromise(\r\n        \"userFindOneOnLoginForCreatChat\",\r\n        GQL(\r\n          `query UserInfo($query:String){\r\n            UserFindOne(query: $query){\r\n                _id\r\n                createdAt\r\n                login\r\n                nick\r\n                avatar{\r\n                  url\r\n                }\r\n                chats{\r\n                  title\r\n                  members{\r\n                    login\r\n                  }\r\n                }\r\n              }\r\n            }`,\r\n          { query: JSON.stringify([{ login: login }]) }\r\n        )\r\n      )\r\n    );\r\n  };\r\n}\r\n\r\nexport function actionCreateChat(title, id) {\r\n  return async function (dispatch) {\r\n    let data = await dispatch(\r\n      actionPromise(\r\n        \"createChat\",\r\n        GQL(\r\n          `mutation CreateChat($chat:ChatInput){\r\n            ChatUpsert(chat:$chat){\r\n              _id\r\n              title\r\n              owner{\r\n                _id\r\n                login\r\n                nick\r\n              }\r\n            }\r\n          }`,\r\n          { chat: { title: title, members: { _id: id } } }\r\n        )\r\n      )\r\n    );\r\n    await dispatch(actionFindAllChats(id));\r\n  };\r\n}\r\n\r\nexport function actionChatWithSelectedUser(title, id, idSelectedUser) {\r\n  return async function (dispatch) {\r\n    let data = await dispatch(\r\n      actionPromise(\r\n        \"createChat\",\r\n        GQL(\r\n          `mutation CreateChat($chat:ChatInput){\r\n            ChatUpsert(chat:$chat){\r\n              _id\r\n              title\r\n              owner{\r\n                _id\r\n                login\r\n                nick\r\n              }\r\n            }\r\n          }`,\r\n          {\r\n            chat: {\r\n              title: title,\r\n              members: [{ _id: id }, { _id: idSelectedUser }],\r\n            },\r\n          }\r\n        )\r\n      )\r\n    );\r\n    await dispatch(actionFindAllChats(id));\r\n  };\r\n}\r\n\r\nexport function actionAddAvatar(userId, avatarId) {\r\n  return async function (dispatch) {\r\n    let data = await dispatch(\r\n      actionPromise(\r\n        \"addAvatarToUser\",\r\n        GQL(\r\n          `mutation addAvatarToUser($user:UserInput){\r\n            UserUpsert(user:$user){\r\n              login\r\n              avatar{\r\n                url\r\n                originalFileName\r\n              }\r\n            }\r\n          }`,\r\n          { user: { _id: userId, avatar: { _id: avatarId } } }\r\n        )\r\n      )\r\n    );\r\n    console.log(data);\r\n  };\r\n}\r\n\r\n// \"[{\\\"_id\\\": \\\"5e04fbb9fcc6d159b36b3e2d\\\"}]\"\r\nexport function actionFindAllChats(id) {\r\n  return async function (dispatch) {\r\n    let data = await dispatch(\r\n      actionPromise(\r\n        \"findChats\",\r\n        GQL(\r\n          `query usersChats($query: String) {\r\n            UserFindOne(query: $query) {\r\n              chats {\r\n                _id\r\n                title\r\n                members {\r\n                  login\r\n                }\r\n              }\r\n            }\r\n          }`,\r\n          { query: JSON.stringify([{ _id: id }]) }\r\n        )\r\n      )\r\n    );\r\n  };\r\n}\r\n\r\nexport function actionUpload(form, userId) {\r\n  return async (dispatch) => {\r\n    let data = await dispatch(\r\n      actionPromise(\r\n        \"uploadFile\",\r\n        fetch(\"/upload\", {\r\n          method: \"POST\",\r\n          headers: localStorage.authToken\r\n            ? { Authorization: \"Bearer \" + localStorage.authToken }\r\n            : {},\r\n          body: new FormData(form),\r\n        }).then((res) => {\r\n          console.log(\"Res: \", res);\r\n          return res.json();\r\n        })\r\n      )\r\n    );\r\n    console.log(data);\r\n    await dispatch(actionAddAvatar(userId, data._id));\r\n  };\r\n}\r\n\r\nexport function actionGetMessages(id) {\r\n  return async (dispatch) => {\r\n    let data = await dispatch(\r\n      actionPromise(\r\n        \"oneChatMessages\",\r\n        GQL(\r\n          `query oneChatMessages($query: String) {\r\n            ChatFindOne(query: $query) {\r\n              _id\r\n              title\r\n              avatar{\r\n                url\r\n              } \r\n              members {\r\n                nick\r\n              }\r\n              messages {\r\n                _id\r\n                owner {\r\n                  nick\r\n                }\r\n                text\r\n                createdAt\r\n              }\r\n            }\r\n          }`,\r\n          { query: JSON.stringify([{ _id: id }]) }\r\n        )\r\n      )\r\n    );\r\n    if (data.data.ChatFindOne !== null) {\r\n      dispatch(\r\n        actionSaveMessages(\r\n          data.data.ChatFindOne.messages,\r\n          data.data.ChatFindOne._id,\r\n          data.data.ChatFindOne.title\r\n        )\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\nexport function actionSetMessage(idChat, text) {\r\n  return async (dispatch) => {\r\n    let data = await dispatch(\r\n      actionPromise(\r\n        \"setMessage\",\r\n        GQL(\r\n          `mutation addMessageToChat($message:MessageInput){\r\n            MessageUpsert(message:$message){\r\n              _id\r\n              createdAt\r\n              text\r\n              owner{\r\n                _id\r\n                login\r\n                nick\r\n              }\r\n              chat{\r\n                _id\r\n                title\r\n              }\r\n            }\r\n          }`,\r\n          { message: { chat: { _id: idChat }, text: text } }\r\n        )\r\n      )\r\n    );\r\n    // console.log(data);\r\n\r\n    // dispatch(\r\n    //   actionSaveMessages(\r\n    //     [\r\n    //       {\r\n    //         _id: data.data.MessageUpsert._id,\r\n    //         owner: data.data.MessageUpsert.owner,\r\n    //         text: data.data.MessageUpsert.text,\r\n    //         createdAt: data.data.MessageUpsert.createdAt,\r\n    //       },\r\n    //     ],\r\n    //     data.data.MessageUpsert.chat._id,\r\n    //     data.data.MessageUpsert.chat.title\r\n    //   )\r\n    // );\r\n\r\n    // await dispatch(actionGetMessages(data.data.MessageUpsert.chat._id));\r\n  };\r\n}\r\n\r\n// export function actionAddChatsToOwner(chats,id){\r\n//   return async dispatch=>{\r\n//       let data = await dispatch(\r\n//           actionPromise(\r\n//               \"addChatsToOwner\",\r\n//               GQL(\r\n//                   `mutation addChatToUser{\r\n//                     UserUpsert(user:{_id:5f69ea01c3de58221910d292, chats:[...chats,{_id:5f7746eb44e0156febb2aaea}]}){\r\n//                       _id\r\n//                       login\r\n//                       nick\r\n//                       avatar{\r\n//                         url\r\n//                       }\r\n//                       chats{\r\n//                         title\r\n//                       }\r\n//                     }\r\n//                   }`\r\n//                  ,{query: JSON.stringify([user:{_id:id, chats: [...chats, newChat]}])}\r\n//                  )\r\n//           )\r\n//       )\r\n//       // data.data.UserFindOne.following.push(idFollowing)\r\n//       // let newFollowing = JSON.stringify(data.data.UserFindOne.following)\r\n//       // let newArr = await dispatch(\r\n//       //     actionPromise(\r\n//       //         name,\r\n//       //         gql(`mutation following($id:String!,$newFollowing:[UserInput]!){\r\n//       //             UserUpsert( user:{_id:$id,following:$newFollowing}){\r\n//       //               _id\r\n//       //             }\r\n//       //           }`,{id,newFollowing})\r\n//       //     )\r\n//       // )\r\n//       // console.log(newArr)\r\n//   }\r\n// }\r\n\r\n// `mutation addChatToUser{\r\n//   UserUpsert(user:{_id:5f69ea01c3de58221910d292, chats:[...chats,{_id:5f7746eb44e0156febb2aaea}]}){\r\n//     _id\r\n//     login\r\n//     nick\r\n//     avatar{\r\n//       url\r\n//     }\r\n//     chats{\r\n//       title\r\n//     }\r\n//   }\r\n// }`\r\n","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\ModalWindowCreateChat.js",["178","179","180","181"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Input, Button } from \"antd\";\r\nimport {\r\n  actionUserFindOneOnLoginForCreatChat,\r\n  actionCreateChat,\r\n  actionFindAllChats,\r\n  // actionChatWithSelectedUser,\r\n} from \"../actions/requests\";\r\nimport {\r\n  actionAddUsersLogin,\r\n  actionAddUsersLoginBackToChat,\r\n  actionDeleteUsersLogin,\r\n  actionDeleteUsersLoginFromChat,\r\n  actionFoundUsersLogin,\r\n  actionSaveUsersLogin,\r\n} from \"../actions/chatCreate\";\r\nimport { checkTwo } from \"../App\";\r\nimport MyPortal from \"../components/MyPortal\";\r\nimport \"./styles/modal-window.css\";\r\n\r\nconst Modal = connect(\r\n  (state) => ({\r\n    state: state,\r\n    foundUser: checkTwo`${state}promiseReducer.userFindOneOnLoginForCreatChat.payload.data.UserFindOne.login`,\r\n    // userId: checkTwo`${state}AuthReducer.data.sub.id`,\r\n    // chat: checkTwo`${state}promiseReducer.createChat.payload.data.ChatUpsert`,\r\n    usersToChat:\r\n      checkTwo`${state}chatCreateReducer.addOrDeleteUserToChat.users` || [],\r\n    usersFromChat:\r\n      checkTwo`${state}chatCreateReducer.saveFoundUsersLogin.users` || [],\r\n  }),\r\n  {\r\n    // onChatWithSelectedUser: actionChatWithSelectedUser,\r\n    findUserByLogin: actionUserFindOneOnLoginForCreatChat,\r\n    // onChatCreate: actionCreateChat,\r\n    // onFindChats: actionFindAllChats,\r\n    onSaveUserLogin: actionSaveUsersLogin,\r\n    onDeleteUserFromChat: actionDeleteUsersLoginFromChat,\r\n    onSaveFoundUsernames: actionFoundUsersLogin,\r\n    onDeleteUsersLogin: actionDeleteUsersLogin,\r\n    onAddUsersBackToChat: actionAddUsersLoginBackToChat,\r\n  }\r\n)(\r\n  ({\r\n    state,\r\n    foundUser,\r\n    usersToChat,\r\n    usersFromChat,\r\n    login,\r\n    // onChatCreate,\r\n    // userId,\r\n    // chat,\r\n    updateModal,\r\n    findUserByLogin,\r\n    onSaveUserLogin,\r\n    onDeleteUserFromChat,\r\n    onSaveFoundUsernames,\r\n    onDeleteUsersLogin,\r\n    onAddUsersBackToChat,\r\n  }) => {\r\n    const [chatTitle, setChatTitle] = useState(\"\");\r\n    const [userLogin, setuserLogin] = useState(\"\");\r\n\r\n    console.log(\"state: \", state);\r\n\r\n    useEffect(() => {\r\n      if (\r\n        foundUser &&\r\n        foundUser.length > 0 &&\r\n        !usersToChat.includes(foundUser)\r\n      ) {\r\n        onSaveUserLogin(\"addOrDeleteUserToChat\", foundUser);\r\n      }\r\n    }, [foundUser]);\r\n\r\n    return (\r\n      <>\r\n        <MyPortal>\r\n          <div className=\"modal-overlay\">\r\n            <div className=\"modal-window\">\r\n              <div className=\"header-line\">\r\n                <h3>Create chat</h3>\r\n                <span\r\n                  className=\"icon-x-square\"\r\n                  onClick={(e) => updateModal(false)}\r\n                ></span>\r\n              </div>\r\n              <div className=\"modal-header\"></div>\r\n              <div className=\"modal-body\">\r\n                <Input\r\n                  id=\"create-chat-input\"\r\n                  placeholder=\"Enter Chat Title\"\r\n                  value={chatTitle}\r\n                  onChange={(e) => setChatTitle(e.target.value)}\r\n                ></Input>\r\n                <Input\r\n                  id=\"search-input\"\r\n                  placeholder=\"Enter User Login\"\r\n                  value={userLogin}\r\n                  onChange={(e) => setuserLogin(e.target.value)}\r\n                ></Input>\r\n                <Button\r\n                  id=\"search-button\"\r\n                  onClick={() => {\r\n                    findUserByLogin(userLogin);\r\n                  }}\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  className=\"login-form-button\"\r\n                >\r\n                  Search\r\n                </Button>\r\n                <div className=\"select-users\">\r\n                  <div className=\"select-users--title\">\r\n                    <h3 className=\"first-title\">Found Users</h3>\r\n                    <h3 className=\"second-title\">Add Users To Chat</h3>\r\n                  </div>\r\n                  <div className=\"select-users--delete\">\r\n                    {usersFromChat && usersFromChat.length > 0\r\n                      ? usersFromChat.map((item, index) => (\r\n                          <span\r\n                            onClick={(event) => {\r\n                              if (\r\n                                usersToChat.includes(event.target.innerText)\r\n                              ) {\r\n                                return;\r\n                              }\r\n                              onAddUsersBackToChat(\r\n                                \"saveFoundUsersLogin\",\r\n                                event.target.innerText\r\n                              );\r\n                            }}\r\n                          >\r\n                            {item}\r\n                          </span>\r\n                        ))\r\n                      : \"\"}\r\n                  </div>\r\n                  <div className=\"select-users--add\">\r\n                    {usersToChat && usersToChat.length > 0\r\n                      ? usersToChat.map((item, index) => (\r\n                          <span\r\n                            onClick={(event) => {\r\n                              if (\r\n                                usersFromChat.includes(event.target.innerText)\r\n                              ) {\r\n                                return;\r\n                              }\r\n                              onDeleteUsersLogin(\r\n                                \"addOrDeleteUserToChat\",\r\n                                event.target.innerText\r\n                              );\r\n                            }}\r\n                          >\r\n                            {item}\r\n                          </span>\r\n                        ))\r\n                      : \"\"}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button className=\"ant-btn ant-btn-primary\" onClick>\r\n                  Submit\r\n                </button>\r\n                <button\r\n                  className=\"ant-btn ant-btn-primary\"\r\n                  onClick={(e) => updateModal(false)}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </MyPortal>\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Modal;\r\n","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\actions\\chatCreate.js",[],"C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\components\\emojiList.js",["182","183","184","185","186","187","188","189"],"import \"./styles/user-page.css\";\r\n\r\nexport const YOUTUBE_REGEXP = /http(?:s?):\\/\\/(?:www\\.)?youtu(?:be\\.com\\/watch\\?v=|\\.be\\/)([\\w\\-\\_]*)(&(amp;)?‌​[\\w\\?‌​=]*)?/gim;\r\nexport const YOUTUBE_REGEXP_ID = /(=|\\.be\\/)([\\w\\-\\_]*)(&(amp;)?‌​[\\w\\?‌​=]*)?/gim;\r\nexport const EMOJI_REGEXP = /:[A-z0-9]+:/gim;\r\nexport const IMAGE_REGEXP = /http(?:s?):\\/\\/(.*)(gif|jpe?g|bmp|png)$/gim;\r\n\r\nlet emoji = {\r\n  100: \"graphics/emojis/100.png \",\r\n  1234: \"graphics/emojis/1234.png\",\r\n  bowtie: \"graphics/emojis/bowtie.png\",\r\n  smile: \"graphics/emojis/smile.png\",\r\n  simple_smile: \"graphics/emojis/simple_smile.png\",\r\n  laughing: \"graphics/emojis/laughing.png\",\r\n  blush: \"graphics/emojis/blush.png\",\r\n  smiley: \"graphics/emojis/smiley.png\",\r\n  relaxed: \"graphics/emojis/relaxed.png\",\r\n  smirk: \"graphics/emojis/smirk.png\",\r\n  heart_eyes: \"graphics/emojis/heart_eyes.png\",\r\n  kissing_heart: \"graphics/emojis/kissing_heart.png\",\r\n  kissing_closed_eyes: \"graphics/emojis/kissing_closed_eyes.png\",\r\n  flushed: \"graphics/emojis/flushed.png\",\r\n  relieved: \"graphics/emojis/relieved.png\",\r\n  satisfied: \"graphics/emojis/satisfied.png\",\r\n  grin: \"graphics/emojis/grin.png\",\r\n  wink: \"graphics/emojis/wink.png\",\r\n  stuck_out_tongue_winking_eye:\r\n    \"graphics/emojis/stuck_out_tongue_winking_eye.png\",\r\n  stuck_out_tongue_closed_eyes:\r\n    \"graphics/emojis/stuck_out_tongue_closed_eyes.png\",\r\n  grinning: \"graphics/emojis/grinning.png\",\r\n  kissing: \"graphics/emojis/kissing.png\",\r\n  kissing_smiling_eyes: \"graphics/emojis/kissing_smiling_eyes.png\",\r\n  stuck_out_tongue: \"graphics/emojis/stuck_out_tongue.png\",\r\n  sleeping: \"graphics/emojis/sleeping.png\",\r\n  worried: \"graphics/emojis/worried.png\",\r\n  frowning: \"graphics/emojis/frowning.png\",\r\n  anguished: \"graphics/emojis/anguished.png\",\r\n  open_mouth: \"graphics/emojis/open_mouth.png\",\r\n  grimacing: \"graphics/emojis/grimacing.png\",\r\n  confused: \"graphics/emojis/confused.png\",\r\n  hushed: \"graphics/emojis/hushed.png\",\r\n  expressionless: \"graphics/emojis/expressionless.png\",\r\n  unamused: \"graphics/emojis/unamused.png\",\r\n  sweat_smile: \"graphics/emojis/sweat_smile.png\",\r\n  sweat: \"graphics/emojis/sweat.png\",\r\n  disappointed_relieved: \"graphics/emojis/disappointed_relieved.png\",\r\n  weary: \"graphics/emojis/weary.png\",\r\n  pensive: \"graphics/emojis/pensive.png\",\r\n  disappointed: \"graphics/emojis/disappointed.png\",\r\n  confounded: \"graphics/emojis/confounded.png\",\r\n  fearful: \"graphics/emojis/fearful.png\",\r\n  cold_sweat: \"graphics/emojis/cold_sweat.png\",\r\n  persevere: \"graphics/emojis/persevere.png\",\r\n  cry: \"graphics/emojis/cry.png\",\r\n  sob: \"graphics/emojis/sob.png\",\r\n  joy: \"graphics/emojis/joy.png\",\r\n  astonished: \"graphics/emojis/astonished.png\",\r\n  scream: \"graphics/emojis/scream.png\",\r\n  neckbeard: \"graphics/emojis/neckbeard.png\",\r\n  tired_face: \"graphics/emojis/tired_face.png\",\r\n  angry: \"graphics/emojis/angry.png\",\r\n  rage: \"graphics/emojis/rage.png\",\r\n  triumph: \"graphics/emojis/triumph.png\",\r\n  sleepy: \"graphics/emojis/sleepy.png\",\r\n  yum: \"graphics/emojis/yum.png\",\r\n  mask: \"graphics/emojis/mask.png\",\r\n  sunglasses: \"graphics/emojis/sunglasses.png\",\r\n  dizzy_face: \"graphics/emojis/dizzy_face.png\",\r\n  imp: \"graphics/emojis/imp.png\",\r\n  smiling_imp: \"graphics/emojis/smiling_imp.png\",\r\n  neutral_face: \"graphics/emojis/neutral_face.png\",\r\n  no_mouth: \"graphics/emojis/no_mouth.png\",\r\n  innocent: \"graphics/emojis/innocent.png\",\r\n  alien: \"graphics/emojis/alien.png\",\r\n  yellow_heart: \"graphics/emojis/yellow_heart.png\",\r\n  blue_heart: \"graphics/emojis/blue_heart.png\",\r\n  purple_heart: \"graphics/emojis/purple_heart.png\",\r\n  heart: \"graphics/emojis/heart.png\",\r\n  green_heart: \"graphics/emojis/green_heart.png\",\r\n  broken_heart: \"graphics/emojis/broken_heart.png\",\r\n  heartbeat: \"graphics/emojis/heartbeat.png\",\r\n  heartpulse: \"graphics/emojis/heartpulse.png\",\r\n  two_hearts: \"graphics/emojis/two_hearts.png\",\r\n  revolving_hearts: \"graphics/emojis/revolving_hearts.png\",\r\n  cupid: \"graphics/emojis/cupid.png\",\r\n  sparkling_heart: \"graphics/emojis/sparkling_heart.png\",\r\n  sparkles: \"graphics/emojis/sparkles.png\",\r\n  star: \"graphics/emojis/star.png\",\r\n  star2: \"graphics/emojis/star2.png\",\r\n  dizzy: \"graphics/emojis/dizzy.png\",\r\n  boom: \"graphics/emojis/boom.png\",\r\n  collision: \"graphics/emojis/collision.png\",\r\n  anger: \"graphics/emojis/anger.png\",\r\n  exclamation: \"graphics/emojis/exclamation.png\",\r\n  question: \"graphics/emojis/question.png\",\r\n  grey_exclamation: \"graphics/emojis/grey_exclamation.png\",\r\n  grey_question: \"graphics/emojis/grey_question.png\",\r\n  zzz: \"graphics/emojis/zzz.png\",\r\n  dash: \"graphics/emojis/dash.png\",\r\n  sweat_drops: \"graphics/emojis/sweat_drops.png\",\r\n  notes: \"graphics/emojis/notes.png\",\r\n  musical_note: \"graphics/emojis/musical_note.png\",\r\n  fire: \"graphics/emojis/fire.png\",\r\n  hankey: \"graphics/emojis/hankey.png\",\r\n  poop: \"graphics/emojis/poop.png\",\r\n  shit: \"graphics/emojis/shit.png\",\r\n  \"+1\": \"graphics/emojis/plus1.png\",\r\n  thumbsup: \"graphics/emojis/thumbsup.png\",\r\n  \"-1\": \"graphics/emojis/-1.png\",\r\n  thumbsdown: \"graphics/emojis/thumbsdown.png\",\r\n  ok_hand: \"graphics/emojis/ok_hand.png\",\r\n  punch: \"graphics/emojis/punch.png\",\r\n  facepunch: \"graphics/emojis/facepunch.png\",\r\n  fist: \"graphics/emojis/fist.png\",\r\n  v: \"graphics/emojis/v.png\",\r\n  wave: \"graphics/emojis/wave.png\",\r\n  hand: \"graphics/emojis/hand.png\",\r\n  raised_hand: \"graphics/emojis/raised_hand.png\",\r\n  open_hands: \"graphics/emojis/open_hands.png\",\r\n  point_up: \"graphics/emojis/point_up.png\",\r\n  point_down: \"graphics/emojis/point_down.png\",\r\n  point_left: \"graphics/emojis/point_left.png\",\r\n  point_right: \"graphics/emojis/point_right.png\",\r\n  raised_hands: \"graphics/emojis/raised_hands.png\",\r\n  pray: \"graphics/emojis/pray.png\",\r\n  point_up_2: \"graphics/emojis/point_up_2.png\",\r\n  clap: \"graphics/emojis/clap.png\",\r\n  muscle: \"graphics/emojis/muscle.png\",\r\n  metal: \"graphics/emojis/metal.png\",\r\n  fu: \"graphics/emojis/fu.png\",\r\n  runner: \"graphics/emojis/runner.png\",\r\n  running: \"graphics/emojis/running.png\",\r\n  couple: \"graphics/emojis/couple.png\",\r\n  family: \"graphics/emojis/family.png\",\r\n  two_men_holding_hands: \"graphics/emojis/two_men_holding_hands.png\",\r\n  two_women_holding_hands: \"graphics/emojis/two_women_holding_hands.png\",\r\n  dancer: \"graphics/emojis/dancer.png\",\r\n  dancers: \"graphics/emojis/dancers.png\",\r\n  ok_woman: \"graphics/emojis/ok_woman.png\",\r\n  no_good: \"graphics/emojis/no_good.png\",\r\n  information_desk_person: \"graphics/emojis/information_desk_person.png\",\r\n  raising_hand: \"graphics/emojis/raising_hand.png\",\r\n  bride_with_veil: \"graphics/emojis/bride_with_veil.png\",\r\n  person_with_pouting_face: \"graphics/emojis/person_with_pouting_face.png\",\r\n  person_frowning: \"graphics/emojis/person_frowning.png\",\r\n  bow: \"graphics/emojis/bow.png\",\r\n  couplekiss: \"graphics/emojis/couplekiss.png\",\r\n  couple_with_heart: \"graphics/emojis/couple_with_heart.png\",\r\n  massage: \"graphics/emojis/massage.png\",\r\n  haircut: \"graphics/emojis/haircut.png\",\r\n  nail_care: \"graphics/emojis/nail_care.png\",\r\n  boy: \"graphics/emojis/boy.png\",\r\n  girl: \"graphics/emojis/girl.png\",\r\n  woman: \"graphics/emojis/woman.png\",\r\n  man: \"graphics/emojis/man.png\",\r\n  baby: \"graphics/emojis/baby.png\",\r\n  older_woman: \"graphics/emojis/older_woman.png\",\r\n  older_man: \"graphics/emojis/older_man.png\",\r\n  person_with_blond_hair: \"graphics/emojis/person_with_blond_hair.png\",\r\n  man_with_gua_pi_mao: \"graphics/emojis/man_with_gua_pi_mao.png\",\r\n  man_with_turban: \"graphics/emojis/man_with_turban.png\",\r\n  construction_worker: \"graphics/emojis/construction_worker.png\",\r\n  cop: \"graphics/emojis/cop.png\",\r\n  angel: \"graphics/emojis/angel.png\",\r\n  princess: \"graphics/emojis/princess.png\",\r\n  smiley_cat: \"graphics/emojis/smiley_cat.png\",\r\n  smile_cat: \"graphics/emojis/smile_cat.png\",\r\n  heart_eyes_cat: \"graphics/emojis/heart_eyes_cat.png\",\r\n  kissing_cat: \"graphics/emojis/kissing_cat.png\",\r\n  smirk_cat: \"graphics/emojis/smirk_cat.png\",\r\n  scream_cat: \"graphics/emojis/scream_cat.png\",\r\n  crying_cat_face: \"graphics/emojis/crying_cat_face.png\",\r\n  joy_cat: \"graphics/emojis/joy_cat.png\",\r\n  pouting_cat: \"graphics/emojis/pouting_cat.png\",\r\n  japanese_ogre: \"graphics/emojis/japanese_ogre.png\",\r\n  japanese_goblin: \"graphics/emojis/japanese_goblin.png\",\r\n  see_no_evil: \"graphics/emojis/see_no_evil.png\",\r\n  hear_no_evil: \"graphics/emojis/hear_no_evil.png\",\r\n  speak_no_evil: \"graphics/emojis/speak_no_evil.png\",\r\n  guardsman: \"graphics/emojis/guardsman.png\",\r\n  skull: \"graphics/emojis/skull.png\",\r\n  feet: \"graphics/emojis/feet.png\",\r\n  lips: \"graphics/emojis/lips.png\",\r\n  kiss: \"graphics/emojis/kiss.png\",\r\n  droplet: \"graphics/emojis/droplet.png\",\r\n  ear: \"graphics/emojis/ear.png\",\r\n  eyes: \"graphics/emojis/eyes.png\",\r\n  nose: \"graphics/emojis/nose.png\",\r\n  tongue: \"graphics/emojis/tongue.png\",\r\n  love_letter: \"graphics/emojis/love_letter.png\",\r\n  bust_in_silhouette: \"graphics/emojis/bust_in_silhouette.png\",\r\n  busts_in_silhouette: \"graphics/emojis/busts_in_silhouette.png\",\r\n  speech_balloon: \"graphics/emojis/speech_balloon.png\",\r\n  thought_balloon: \"graphics/emojis/thought_balloon.png\",\r\n  feelsgood: \"graphics/emojis/feelsgood.png\",\r\n  finnadie: \"graphics/emojis/finnadie.png\",\r\n  goberserk: \"graphics/emojis/goberserk.png\",\r\n  godmode: \"graphics/emojis/godmode.png\",\r\n  hurtrealbad: \"graphics/emojis/hurtrealbad.png\",\r\n  rage1: \"graphics/emojis/rage1.png\",\r\n  rage2: \"graphics/emojis/rage2.png\",\r\n  rage3: \"graphics/emojis/rage3.png\",\r\n  rage4: \"graphics/emojis/rage4.png\",\r\n  suspect: \"graphics/emojis/suspect.png\",\r\n  trollface: \"graphics/emojis/trollface.png\",\r\n  sunny: \"graphics/emojis/sunny.png\",\r\n  umbrella: \"graphics/emojis/umbrella.png\",\r\n  cloud: \"graphics/emojis/cloud.png\",\r\n  snowflake: \"graphics/emojis/snowflake.png\",\r\n  snowman: \"graphics/emojis/snowman.png\",\r\n  zap: \"graphics/emojis/zap.png\",\r\n  cyclone: \"graphics/emojis/cyclone.png\",\r\n  foggy: \"graphics/emojis/foggy.png\",\r\n  ocean: \"graphics/emojis/ocean.png\",\r\n  cat: \"graphics/emojis/cat.png\",\r\n  dog: \"graphics/emojis/dog.png\",\r\n  mouse: \"graphics/emojis/mouse.png\",\r\n  hamster: \"graphics/emojis/hamster.png\",\r\n  rabbit: \"graphics/emojis/rabbit.png\",\r\n  wolf: \"graphics/emojis/wolf.png\",\r\n  frog: \"graphics/emojis/frog.png\",\r\n  tiger: \"graphics/emojis/tiger.png\",\r\n  koala: \"graphics/emojis/koala.png\",\r\n  bear: \"graphics/emojis/bear.png\",\r\n  pig: \"graphics/emojis/pig.png\",\r\n  pig_nose: \"graphics/emojis/pig_nose.png\",\r\n  cow: \"graphics/emojis/cow.png\",\r\n  boar: \"graphics/emojis/boar.png\",\r\n  monkey_face: \"graphics/emojis/monkey_face.png\",\r\n  monkey: \"graphics/emojis/monkey.png\",\r\n  horse: \"graphics/emojis/horse.png\",\r\n  racehorse: \"graphics/emojis/racehorse.png\",\r\n  camel: \"graphics/emojis/camel.png\",\r\n  sheep: \"graphics/emojis/sheep.png\",\r\n  elephant: \"graphics/emojis/elephant.png\",\r\n  panda_face: \"graphics/emojis/panda_face.png\",\r\n  snake: \"graphics/emojis/snake.png\",\r\n  bird: \"graphics/emojis/bird.png\",\r\n  baby_chick: \"graphics/emojis/baby_chick.png\",\r\n  hatched_chick: \"graphics/emojis/hatched_chick.png\",\r\n  hatching_chick: \"graphics/emojis/hatching_chick.png\",\r\n  chicken: \"graphics/emojis/chicken.png\",\r\n  penguin: \"graphics/emojis/penguin.png\",\r\n  turtle: \"graphics/emojis/turtle.png\",\r\n  bug: \"graphics/emojis/bug.png\",\r\n  honeybee: \"graphics/emojis/honeybee.png\",\r\n  ant: \"graphics/emojis/ant.png\",\r\n  beetle: \"graphics/emojis/beetle.png\",\r\n  snail: \"graphics/emojis/snail.png\",\r\n  octopus: \"graphics/emojis/octopus.png\",\r\n  tropical_fish: \"graphics/emojis/tropical_fish.png\",\r\n  fish: \"graphics/emojis/fish.png\",\r\n  whale: \"graphics/emojis/whale.png\",\r\n  whale2: \"graphics/emojis/whale2.png\",\r\n  dolphin: \"graphics/emojis/dolphin.png\",\r\n  cow2: \"graphics/emojis/cow2.png\",\r\n  ram: \"graphics/emojis/ram.png\",\r\n  rat: \"graphics/emojis/rat.png\",\r\n  water_buffalo: \"graphics/emojis/water_buffalo.png\",\r\n  tiger2: \"graphics/emojis/tiger2.png\",\r\n  rabbit2: \"graphics/emojis/rabbit2.png\",\r\n  dragon: \"graphics/emojis/dragon.png\",\r\n  goat: \"graphics/emojis/goat.png\",\r\n  rooster: \"graphics/emojis/rooster.png\",\r\n  dog2: \"graphics/emojis/dog2.png\",\r\n  pig2: \"graphics/emojis/pig2.png\",\r\n  mouse2: \"graphics/emojis/mouse2.png\",\r\n  ox: \"graphics/emojis/ox.png\",\r\n  dragon_face: \"graphics/emojis/dragon_face.png\",\r\n  blowfish: \"graphics/emojis/blowfish.png\",\r\n  crocodile: \"graphics/emojis/crocodile.png\",\r\n  dromedary_camel: \"graphics/emojis/dromedary_camel.png\",\r\n  leopard: \"graphics/emojis/leopard.png\",\r\n  cat2: \"graphics/emojis/cat2.png\",\r\n  poodle: \"graphics/emojis/poodle.png\",\r\n  paw_prints: \"graphics/emojis/paw_prints.png\",\r\n  bouquet: \"graphics/emojis/bouquet.png\",\r\n  cherry_blossom: \"graphics/emojis/cherry_blossom.png\",\r\n  tulip: \"graphics/emojis/tulip.png\",\r\n  four_leaf_clover: \"graphics/emojis/four_leaf_clover.png\",\r\n  rose: \"graphics/emojis/rose.png\",\r\n  sunflower: \"graphics/emojis/sunflower.png\",\r\n  hibiscus: \"graphics/emojis/hibiscus.png\",\r\n  maple_leaf: \"graphics/emojis/maple_leaf.png\",\r\n  leaves: \"graphics/emojis/leaves.png\",\r\n  fallen_leaf: \"graphics/emojis/fallen_leaf.png\",\r\n  herb: \"graphics/emojis/herb.png\",\r\n  mushroom: \"graphics/emojis/mushroom.png\",\r\n  cactus: \"graphics/emojis/cactus.png\",\r\n  palm_tree: \"graphics/emojis/palm_tree.png\",\r\n  evergreen_tree: \"graphics/emojis/evergreen_tree.png\",\r\n  deciduous_tree: \"graphics/emojis/deciduous_tree.png\",\r\n  chestnut: \"graphics/emojis/chestnut.png\",\r\n  seedling: \"graphics/emojis/seedling.png\",\r\n  blossom: \"graphics/emojis/blossom.png\",\r\n  ear_of_rice: \"graphics/emojis/ear_of_rice.png\",\r\n  shell: \"graphics/emojis/shell.png\",\r\n  globe_with_meridians: \"graphics/emojis/globe_with_meridians.png\",\r\n  sun_with_face: \"graphics/emojis/sun_with_face.png\",\r\n  full_moon_with_face: \"graphics/emojis/full_moon_with_face.png\",\r\n  new_moon_with_face: \"graphics/emojis/new_moon_with_face.png\",\r\n  new_moon: \"graphics/emojis/new_moon.png\",\r\n  waxing_crescent_moon: \"graphics/emojis/waxing_crescent_moon.png\",\r\n  first_quarter_moon: \"graphics/emojis/first_quarter_moon.png\",\r\n  waxing_gibbous_moon: \"graphics/emojis/waxing_gibbous_moon.png\",\r\n  full_moon: \"graphics/emojis/full_moon.png\",\r\n  waning_gibbous_moon: \"graphics/emojis/waning_gibbous_moon.png\",\r\n  last_quarter_moon: \"graphics/emojis/last_quarter_moon.png\",\r\n  waning_crescent_moon: \"graphics/emojis/waning_crescent_moon.png\",\r\n  last_quarter_moon_with_face:\r\n    \"graphics/emojis/last_quarter_moon_with_face.png\",\r\n  first_quarter_moon_with_face:\r\n    \"graphics/emojis/first_quarter_moon_with_face.png\",\r\n  crescent_moon: \"graphics/emojis/crescent_moon.png\",\r\n  earth_africa: \"graphics/emojis/earth_africa.png\",\r\n  earth_americas: \"graphics/emojis/earth_americas.png\",\r\n  earth_asia: \"graphics/emojis/earth_asia.png\",\r\n  volcano: \"graphics/emojis/volcano.png\",\r\n  milky_way: \"graphics/emojis/milky_way.png\",\r\n  partly_sunny: \"graphics/emojis/partly_sunny.png\",\r\n  octocat: \"graphics/emojis/octocat.png\",\r\n  squirrel: \"graphics/emojis/squirrel.png\",\r\n  bamboo: \"graphics/emojis/bamboo.png\",\r\n  gift_heart: \"graphics/emojis/gift_heart.png\",\r\n  dolls: \"graphics/emojis/dolls.png\",\r\n  school_satchel: \"graphics/emojis/school_satchel.png\",\r\n  mortar_board: \"graphics/emojis/mortar_board.png\",\r\n  flags: \"graphics/emojis/flags.png\",\r\n  fireworks: \"graphics/emojis/fireworks.png\",\r\n  sparkler: \"graphics/emojis/sparkler.png\",\r\n  wind_chime: \"graphics/emojis/wind_chime.png\",\r\n  rice_scene: \"graphics/emojis/rice_scene.png\",\r\n  jack_o_lantern: \"graphics/emojis/jack_o_lantern.png\",\r\n  ghost: \"graphics/emojis/ghost.png\",\r\n  santa: \"graphics/emojis/santa.png\",\r\n  christmas_tree: \"graphics/emojis/christmas_tree.png\",\r\n  gift: \"graphics/emojis/gift.png\",\r\n  bell: \"graphics/emojis/bell.png\",\r\n  no_bell: \"graphics/emojis/no_bell.png\",\r\n  tanabata_tree: \"graphics/emojis/tanabata_tree.png\",\r\n  tada: \"graphics/emojis/tada.png\",\r\n  confetti_ball: \"graphics/emojis/confetti_ball.png\",\r\n  balloon: \"graphics/emojis/balloon.png\",\r\n  crystal_ball: \"graphics/emojis/crystal_ball.png\",\r\n  cd: \"graphics/emojis/cd.png\",\r\n  dvd: \"graphics/emojis/dvd.png\",\r\n  floppy_disk: \"graphics/emojis/floppy_disk.png\",\r\n  camera: \"graphics/emojis/camera.png\",\r\n  video_camera: \"graphics/emojis/video_camera.png\",\r\n  movie_camera: \"graphics/emojis/movie_camera.png\",\r\n  computer: \"graphics/emojis/computer.png\",\r\n  tv: \"graphics/emojis/tv.png\",\r\n  iphone: \"graphics/emojis/iphone.png\",\r\n  phone: \"graphics/emojis/phone.png\",\r\n  telephone: \"graphics/emojis/telephone.png\",\r\n  telephone_receiver: \"graphics/emojis/telephone_receiver.png\",\r\n  pager: \"graphics/emojis/pager.png\",\r\n  fax: \"graphics/emojis/fax.png\",\r\n  minidisc: \"graphics/emojis/minidisc.png\",\r\n  vhs: \"graphics/emojis/vhs.png\",\r\n  sound: \"graphics/emojis/sound.png\",\r\n  speaker: \"graphics/emojis/speaker.png\",\r\n  mute: \"graphics/emojis/mute.png\",\r\n  loudspeaker: \"graphics/emojis/loudspeaker.png\",\r\n  mega: \"graphics/emojis/mega.png\",\r\n  hourglass: \"graphics/emojis/hourglass.png\",\r\n  hourglass_flowing_sand: \"graphics/emojis/hourglass_flowing_sand.png\",\r\n  alarm_clock: \"graphics/emojis/alarm_clock.png\",\r\n  watch: \"graphics/emojis/watch.png\",\r\n  radio: \"graphics/emojis/radio.png\",\r\n  satellite: \"graphics/emojis/satellite.png\",\r\n  loop: \"graphics/emojis/loop.png\",\r\n  mag: \"graphics/emojis/mag.png\",\r\n  mag_right: \"graphics/emojis/mag_right.png\",\r\n  unlock: \"graphics/emojis/unlock.png\",\r\n  lock: \"graphics/emojis/lock.png\",\r\n  lock_with_ink_pen: \"graphics/emojis/lock_with_ink_pen.png\",\r\n  closed_lock_with_key: \"graphics/emojis/closed_lock_with_key.png\",\r\n  key: \"graphics/emojis/key.png\",\r\n  bulb: \"graphics/emojis/bulb.png\",\r\n  flashlight: \"graphics/emojis/flashlight.png\",\r\n  high_brightness: \"graphics/emojis/high_brightness.png\",\r\n  low_brightness: \"graphics/emojis/low_brightness.png\",\r\n  electric_plug: \"graphics/emojis/electric_plug.png\",\r\n  battery: \"graphics/emojis/battery.png\",\r\n  calling: \"graphics/emojis/calling.png\",\r\n  email: \"graphics/emojis/email.png\",\r\n  mailbox: \"graphics/emojis/mailbox.png\",\r\n  postbox: \"graphics/emojis/postbox.png\",\r\n  bath: \"graphics/emojis/bath.png\",\r\n  bathtub: \"graphics/emojis/bathtub.png\",\r\n  shower: \"graphics/emojis/shower.png\",\r\n  toilet: \"graphics/emojis/toilet.png\",\r\n  wrench: \"graphics/emojis/wrench.png\",\r\n  nut_and_bolt: \"graphics/emojis/nut_and_bolt.png\",\r\n  hammer: \"graphics/emojis/hammer.png\",\r\n  seat: \"graphics/emojis/seat.png\",\r\n  moneybag: \"graphics/emojis/moneybag.png\",\r\n  yen: \"graphics/emojis/yen.png\",\r\n  dollar: \"graphics/emojis/dollar.png\",\r\n  pound: \"graphics/emojis/pound.png\",\r\n  euro: \"graphics/emojis/euro.png\",\r\n  credit_card: \"graphics/emojis/credit_card.png\",\r\n  money_with_wings: \"graphics/emojis/money_with_wings.png\",\r\n  \"e-mail\": \"graphics/emojis/e-mail.png\",\r\n  inbox_tray: \"graphics/emojis/inbox_tray.png\",\r\n  outbox_tray: \"graphics/emojis/outbox_tray.png\",\r\n  envelope: \"graphics/emojis/envelope.png\",\r\n  incoming_envelope: \"graphics/emojis/incoming_envelope.png\",\r\n  postal_horn: \"graphics/emojis/postal_horn.png\",\r\n  mailbox_closed: \"graphics/emojis/mailbox_closed.png\",\r\n  mailbox_with_mail: \"graphics/emojis/mailbox_with_mail.png\",\r\n  mailbox_with_no_mail: \"graphics/emojis/mailbox_with_no_mail.png\",\r\n  package: \"graphics/emojis/package.png\",\r\n  door: \"graphics/emojis/door.png\",\r\n  smoking: \"graphics/emojis/smoking.png\",\r\n  bomb: \"graphics/emojis/bomb.png\",\r\n  gun: \"graphics/emojis/gun.png\",\r\n  hocho: \"graphics/emojis/hocho.png\",\r\n  pill: \"graphics/emojis/pill.png\",\r\n  syringe: \"graphics/emojis/syringe.png\",\r\n  page_facing_up: \"graphics/emojis/page_facing_up.png\",\r\n  page_with_curl: \"graphics/emojis/page_with_curl.png\",\r\n  bookmark_tabs: \"graphics/emojis/bookmark_tabs.png\",\r\n  bar_chart: \"graphics/emojis/bar_chart.png\",\r\n  chart_with_upwards_trend: \"graphics/emojis/chart_with_upwards_trend.png\",\r\n  chart_with_downwards_trend: \"graphics/emojis/chart_with_downwards_trend.png\",\r\n  scroll: \"graphics/emojis/scroll.png\",\r\n  clipboard: \"graphics/emojis/clipboard.png\",\r\n  calendar: \"graphics/emojis/calendar.png\",\r\n  date: \"graphics/emojis/date.png\",\r\n  card_index: \"graphics/emojis/card_index.png\",\r\n  file_folder: \"graphics/emojis/file_folder.png\",\r\n  open_file_folder: \"graphics/emojis/open_file_folder.png\",\r\n  scissors: \"graphics/emojis/scissors.png\",\r\n  pushpin: \"graphics/emojis/pushpin.png\",\r\n  paperclip: \"graphics/emojis/paperclip.png\",\r\n  black_nib: \"graphics/emojis/black_nib.png\",\r\n  pencil2: \"graphics/emojis/pencil2.png\",\r\n  straight_ruler: \"graphics/emojis/straight_ruler.png\",\r\n  triangular_ruler: \"graphics/emojis/triangular_ruler.png\",\r\n  closed_book: \"graphics/emojis/closed_book.png\",\r\n  green_book: \"graphics/emojis/green_book.png\",\r\n  blue_book: \"graphics/emojis/blue_book.png\",\r\n  orange_book: \"graphics/emojis/orange_book.png\",\r\n  notebook: \"graphics/emojis/notebook.png\",\r\n  notebook_with_decorative_cover:\r\n    \"graphics/emojis/notebook_with_decorative_cover.png\",\r\n  ledger: \"graphics/emojis/ledger.png\",\r\n  books: \"graphics/emojis/books.png\",\r\n  bookmark: \"graphics/emojis/bookmark.png\",\r\n  name_badge: \"graphics/emojis/name_badge.png\",\r\n  microscope: \"graphics/emojis/microscope.png\",\r\n  telescope: \"graphics/emojis/telescope.png\",\r\n  newspaper: \"graphics/emojis/newspaper.png\",\r\n  football: \"graphics/emojis/football.png\",\r\n  basketball: \"graphics/emojis/basketball.png\",\r\n  soccer: \"graphics/emojis/soccer.png\",\r\n  baseball: \"graphics/emojis/baseball.png\",\r\n  tennis: \"graphics/emojis/tennis.png\",\r\n  \"8ball\": \"graphics/emojis/8ball.png\",\r\n  rugby_football: \"graphics/emojis/rugby_football.png\",\r\n  bowling: \"graphics/emojis/bowling.png\",\r\n  golf: \"graphics/emojis/golf.png\",\r\n  mountain_bicyclist: \"graphics/emojis/mountain_bicyclist.png\",\r\n  bicyclist: \"graphics/emojis/bicyclist.png\",\r\n  horse_racing: \"graphics/emojis/horse_racing.png\",\r\n  snowboarder: \"graphics/emojis/snowboarder.png\",\r\n  swimmer: \"graphics/emojis/swimmer.png\",\r\n  surfer: \"graphics/emojis/surfer.png\",\r\n  ski: \"graphics/emojis/ski.png\",\r\n  spades: \"graphics/emojis/spades.png\",\r\n  hearts: \"graphics/emojis/hearts.png\",\r\n  clubs: \"graphics/emojis/clubs.png\",\r\n  diamonds: \"graphics/emojis/diamonds.png\",\r\n  gem: \"graphics/emojis/gem.png\",\r\n  ring: \"graphics/emojis/ring.png\",\r\n  trophy: \"graphics/emojis/trophy.png\",\r\n  musical_score: \"graphics/emojis/musical_score.png\",\r\n  musical_keyboard: \"graphics/emojis/musical_keyboard.png\",\r\n  violin: \"graphics/emojis/violin.png\",\r\n  space_invader: \"graphics/emojis/space_invader.png\",\r\n  video_game: \"graphics/emojis/video_game.png\",\r\n  black_joker: \"graphics/emojis/black_joker.png\",\r\n  flower_playing_cards: \"graphics/emojis/flower_playing_cards.png\",\r\n  game_die: \"graphics/emojis/game_die.png\",\r\n  dart: \"graphics/emojis/dart.png\",\r\n  mahjong: \"graphics/emojis/mahjong.png\",\r\n  clapper: \"graphics/emojis/clapper.png\",\r\n  memo: \"graphics/emojis/memo.png\",\r\n  pencil: \"graphics/emojis/pencil.png\",\r\n  book: \"graphics/emojis/book.png\",\r\n  art: \"graphics/emojis/art.png\",\r\n  microphone: \"graphics/emojis/microphone.png\",\r\n  headphones: \"graphics/emojis/headphones.png\",\r\n  trumpet: \"graphics/emojis/trumpet.png\",\r\n  saxophone: \"graphics/emojis/saxophone.png\",\r\n  guitar: \"graphics/emojis/guitar.png\",\r\n  shoe: \"graphics/emojis/shoe.png\",\r\n  sandal: \"graphics/emojis/sandal.png\",\r\n  high_heel: \"graphics/emojis/high_heel.png\",\r\n  lipstick: \"graphics/emojis/lipstick.png\",\r\n  boot: \"graphics/emojis/boot.png\",\r\n  shirt: \"graphics/emojis/shirt.png\",\r\n  tshirt: \"graphics/emojis/tshirt.png\",\r\n  necktie: \"graphics/emojis/necktie.png\",\r\n  womans_clothes: \"graphics/emojis/womans_clothes.png\",\r\n  dress: \"graphics/emojis/dress.png\",\r\n  running_shirt_with_sash: \"graphics/emojis/running_shirt_with_sash.png\",\r\n  jeans: \"graphics/emojis/jeans.png\",\r\n  kimono: \"graphics/emojis/kimono.png\",\r\n  bikini: \"graphics/emojis/bikini.png\",\r\n  ribbon: \"graphics/emojis/ribbon.png\",\r\n  tophat: \"graphics/emojis/tophat.png\",\r\n  crown: \"graphics/emojis/crown.png\",\r\n  womans_hat: \"graphics/emojis/womans_hat.png\",\r\n  mans_shoe: \"graphics/emojis/mans_shoe.png\",\r\n  closed_umbrella: \"graphics/emojis/closed_umbrella.png\",\r\n  briefcase: \"graphics/emojis/briefcase.png\",\r\n  handbag: \"graphics/emojis/handbag.png\",\r\n  pouch: \"graphics/emojis/pouch.png\",\r\n  purse: \"graphics/emojis/purse.png\",\r\n  eyeglasses: \"graphics/emojis/eyeglasses.png\",\r\n  fishing_pole_and_fish: \"graphics/emojis/fishing_pole_and_fish.png\",\r\n  coffee: \"graphics/emojis/coffee.png\",\r\n  tea: \"graphics/emojis/tea.png\",\r\n  sake: \"graphics/emojis/sake.png\",\r\n  baby_bottle: \"graphics/emojis/baby_bottle.png\",\r\n  beer: \"graphics/emojis/beer.png\",\r\n  beers: \"graphics/emojis/beers.png\",\r\n  cocktail: \"graphics/emojis/cocktail.png\",\r\n  tropical_drink: \"graphics/emojis/tropical_drink.png\",\r\n  wine_glass: \"graphics/emojis/wine_glass.png\",\r\n  fork_and_knife: \"graphics/emojis/fork_and_knife.png\",\r\n  pizza: \"graphics/emojis/pizza.png\",\r\n  hamburger: \"graphics/emojis/hamburger.png\",\r\n  fries: \"graphics/emojis/fries.png\",\r\n  poultry_leg: \"graphics/emojis/poultry_leg.png\",\r\n  meat_on_bone: \"graphics/emojis/meat_on_bone.png\",\r\n  spaghetti: \"graphics/emojis/spaghetti.png\",\r\n  curry: \"graphics/emojis/curry.png\",\r\n  fried_shrimp: \"graphics/emojis/fried_shrimp.png\",\r\n  bento: \"graphics/emojis/bento.png\",\r\n  sushi: \"graphics/emojis/sushi.png\",\r\n  fish_cake: \"graphics/emojis/fish_cake.png\",\r\n  rice_ball: \"graphics/emojis/rice_ball.png\",\r\n  rice_cracker: \"graphics/emojis/rice_cracker.png\",\r\n  rice: \"graphics/emojis/rice.png\",\r\n  ramen: \"graphics/emojis/ramen.png\",\r\n  stew: \"graphics/emojis/stew.png\",\r\n  oden: \"graphics/emojis/oden.png\",\r\n  dango: \"graphics/emojis/dango.png\",\r\n  egg: \"graphics/emojis/egg.png\",\r\n  bread: \"graphics/emojis/bread.png\",\r\n  doughnut: \"graphics/emojis/doughnut.png\",\r\n  custard: \"graphics/emojis/custard.png\",\r\n  icecream: \"graphics/emojis/icecream.png\",\r\n  ice_cream: \"graphics/emojis/ice_cream.png\",\r\n  shaved_ice: \"graphics/emojis/shaved_ice.png\",\r\n  birthday: \"graphics/emojis/birthday.png\",\r\n  cake: \"graphics/emojis/cake.png\",\r\n  cookie: \"graphics/emojis/cookie.png\",\r\n  chocolate_bar: \"graphics/emojis/chocolate_bar.png\",\r\n  candy: \"graphics/emojis/candy.png\",\r\n  lollipop: \"graphics/emojis/lollipop.png\",\r\n  honey_pot: \"graphics/emojis/honey_pot.png\",\r\n  apple: \"graphics/emojis/apple.png\",\r\n  green_apple: \"graphics/emojis/green_apple.png\",\r\n  tangerine: \"graphics/emojis/tangerine.png\",\r\n  lemon: \"graphics/emojis/lemon.png\",\r\n  cherries: \"graphics/emojis/cherries.png\",\r\n  grapes: \"graphics/emojis/grapes.png\",\r\n  watermelon: \"graphics/emojis/watermelon.png\",\r\n  strawberry: \"graphics/emojis/strawberry.png\",\r\n  peach: \"graphics/emojis/peach.png\",\r\n  melon: \"graphics/emojis/melon.png\",\r\n  banana: \"graphics/emojis/banana.png\",\r\n  pear: \"graphics/emojis/pear.png\",\r\n  pineapple: \"graphics/emojis/pineapple.png\",\r\n  sweet_potato: \"graphics/emojis/sweet_potato.png\",\r\n  eggplant: \"graphics/emojis/eggplant.png\",\r\n  tomato: \"graphics/emojis/tomato.png\",\r\n  corn: \"graphics/emojis/corn.png\",\r\n  house: \"graphics/emojis/house.png\",\r\n  house_with_garden: \"graphics/emojis/house_with_garden.png\",\r\n  school: \"graphics/emojis/school.png\",\r\n  office: \"graphics/emojis/office.png\",\r\n  post_office: \"graphics/emojis/post_office.png\",\r\n  hospital: \"graphics/emojis/hospital.png\",\r\n  bank: \"graphics/emojis/bank.png\",\r\n  convenience_store: \"graphics/emojis/convenience_store.png\",\r\n  love_hotel: \"graphics/emojis/love_hotel.png\",\r\n  hotel: \"graphics/emojis/hotel.png\",\r\n  wedding: \"graphics/emojis/wedding.png\",\r\n  church: \"graphics/emojis/church.png\",\r\n  department_store: \"graphics/emojis/department_store.png\",\r\n  european_post_office: \"graphics/emojis/european_post_office.png\",\r\n  city_sunrise: \"graphics/emojis/city_sunrise.png\",\r\n  city_sunset: \"graphics/emojis/city_sunset.png\",\r\n  japanese_castle: \"graphics/emojis/japanese_castle.png\",\r\n  european_castle: \"graphics/emojis/european_castle.png\",\r\n  tent: \"graphics/emojis/tent.png\",\r\n  factory: \"graphics/emojis/factory.png\",\r\n  tokyo_tower: \"graphics/emojis/tokyo_tower.png\",\r\n  japan: \"graphics/emojis/japan.png\",\r\n  mount_fuji: \"graphics/emojis/mount_fuji.png\",\r\n  sunrise_over_mountains: \"graphics/emojis/sunrise_over_mountains.png\",\r\n  sunrise: \"graphics/emojis/sunrise.png\",\r\n  stars: \"graphics/emojis/stars.png\",\r\n  statue_of_liberty: \"graphics/emojis/statue_of_liberty.png\",\r\n  bridge_at_night: \"graphics/emojis/bridge_at_night.png\",\r\n  carousel_horse: \"graphics/emojis/carousel_horse.png\",\r\n  rainbow: \"graphics/emojis/rainbow.png\",\r\n  ferris_wheel: \"graphics/emojis/ferris_wheel.png\",\r\n  fountain: \"graphics/emojis/fountain.png\",\r\n  roller_coaster: \"graphics/emojis/roller_coaster.png\",\r\n  ship: \"graphics/emojis/ship.png\",\r\n  speedboat: \"graphics/emojis/speedboat.png\",\r\n  boat: \"graphics/emojis/boat.png\",\r\n  sailboat: \"graphics/emojis/sailboat.png\",\r\n  rowboat: \"graphics/emojis/rowboat.png\",\r\n  anchor: \"graphics/emojis/anchor.png\",\r\n  rocket: \"graphics/emojis/rocket.png\",\r\n  airplane: \"graphics/emojis/airplane.png\",\r\n  helicopter: \"graphics/emojis/helicopter.png\",\r\n  steam_locomotive: \"graphics/emojis/steam_locomotive.png\",\r\n  tram: \"graphics/emojis/tram.png\",\r\n  mountain_railway: \"graphics/emojis/mountain_railway.png\",\r\n  bike: \"graphics/emojis/bike.png\",\r\n  aerial_tramway: \"graphics/emojis/aerial_tramway.png\",\r\n  suspension_railway: \"graphics/emojis/suspension_railway.png\",\r\n  mountain_cableway: \"graphics/emojis/mountain_cableway.png\",\r\n  tractor: \"graphics/emojis/tractor.png\",\r\n  blue_car: \"graphics/emojis/blue_car.png\",\r\n  oncoming_automobile: \"graphics/emojis/oncoming_automobile.png\",\r\n  car: \"graphics/emojis/car.png\",\r\n  red_car: \"graphics/emojis/red_car.png\",\r\n  taxi: \"graphics/emojis/taxi.png\",\r\n  oncoming_taxi: \"graphics/emojis/oncoming_taxi.png\",\r\n  articulated_lorry: \"graphics/emojis/articulated_lorry.png\",\r\n  bus: \"graphics/emojis/bus.png\",\r\n  oncoming_bus: \"graphics/emojis/oncoming_bus.png\",\r\n  rotating_light: \"graphics/emojis/rotating_light.png\",\r\n  police_car: \"graphics/emojis/police_car.png\",\r\n  oncoming_police_car: \"graphics/emojis/oncoming_police_car.png\",\r\n  fire_engine: \"graphics/emojis/fire_engine.png\",\r\n  ambulance: \"graphics/emojis/ambulance.png\",\r\n  minibus: \"graphics/emojis/minibus.png\",\r\n  truck: \"graphics/emojis/truck.png\",\r\n  train: \"graphics/emojis/train.png\",\r\n  station: \"graphics/emojis/station.png\",\r\n  train2: \"graphics/emojis/train2.png\",\r\n  bullettrain_front: \"graphics/emojis/bullettrain_front.png\",\r\n  bullettrain_side: \"graphics/emojis/bullettrain_side.png\",\r\n  light_rail: \"graphics/emojis/light_rail.png\",\r\n  monorail: \"graphics/emojis/monorail.png\",\r\n  railway_car: \"graphics/emojis/railway_car.png\",\r\n  trolleybus: \"graphics/emojis/trolleybus.png\",\r\n  ticket: \"graphics/emojis/ticket.png\",\r\n  fuelpump: \"graphics/emojis/fuelpump.png\",\r\n  vertical_traffic_light: \"graphics/emojis/vertical_traffic_light.png\",\r\n  traffic_light: \"graphics/emojis/traffic_light.png\",\r\n  warning: \"graphics/emojis/warning.png\",\r\n  construction: \"graphics/emojis/construction.png\",\r\n  beginner: \"graphics/emojis/beginner.png\",\r\n  atm: \"graphics/emojis/atm.png\",\r\n  slot_machine: \"graphics/emojis/slot_machine.png\",\r\n  busstop: \"graphics/emojis/busstop.png\",\r\n  barber: \"graphics/emojis/barber.png\",\r\n  hotsprings: \"graphics/emojis/hotsprings.png\",\r\n  checkered_flag: \"graphics/emojis/checkered_flag.png\",\r\n  crossed_flags: \"graphics/emojis/crossed_flags.png\",\r\n  izakaya_lantern: \"graphics/emojis/izakaya_lantern.png\",\r\n  moyai: \"graphics/emojis/moyai.png\",\r\n  circus_tent: \"graphics/emojis/circus_tent.png\",\r\n  performing_arts: \"graphics/emojis/performing_arts.png\",\r\n  round_pushpin: \"graphics/emojis/round_pushpin.png\",\r\n  triangular_flag_on_post: \"graphics/emojis/triangular_flag_on_post.png\",\r\n  jp: \"graphics/emojis/jp.png\",\r\n  kr: \"graphics/emojis/kr.png\",\r\n  cn: \"graphics/emojis/cn.png\",\r\n  us: \"graphics/emojis/us.png\",\r\n  fr: \"graphics/emojis/fr.png\",\r\n  es: \"graphics/emojis/es.png\",\r\n  it: \"graphics/emojis/it.png\",\r\n  ru: \"graphics/emojis/ru.png\",\r\n  gb: \"graphics/emojis/gb.png\",\r\n  uk: \"graphics/emojis/uk.png\",\r\n  de: \"graphics/emojis/de.png\",\r\n  one: \"graphics/emojis/one.png\",\r\n  two: \"graphics/emojis/two.png\",\r\n  three: \"graphics/emojis/three.png\",\r\n  four: \"graphics/emojis/four.png\",\r\n  five: \"graphics/emojis/five.png\",\r\n  six: \"graphics/emojis/six.png\",\r\n  seven: \"graphics/emojis/seven.png\",\r\n  eight: \"graphics/emojis/eight.png\",\r\n  nine: \"graphics/emojis/nine.png\",\r\n  keycap_ten: \"graphics/emojis/keycap_ten.png\",\r\n  zero: \"graphics/emojis/zero.png\",\r\n  hash: \"graphics/emojis/hash.png\",\r\n  symbols: \"graphics/emojis/symbols.png\",\r\n  arrow_backward: \"graphics/emojis/arrow_backward.png\",\r\n  arrow_down: \"graphics/emojis/arrow_down.png\",\r\n  arrow_forward: \"graphics/emojis/arrow_forward.png\",\r\n  arrow_left: \"graphics/emojis/arrow_left.png\",\r\n  capital_abcd: \"graphics/emojis/capital_abcd.png\",\r\n  abcd: \"graphics/emojis/abcd.png\",\r\n  abc: \"graphics/emojis/abc.png\",\r\n  arrow_lower_left: \"graphics/emojis/arrow_lower_left.png\",\r\n  arrow_lower_right: \"graphics/emojis/arrow_lower_right.png\",\r\n  arrow_right: \"graphics/emojis/arrow_right.png\",\r\n  arrow_up: \"graphics/emojis/arrow_up.png\",\r\n  arrow_upper_left: \"graphics/emojis/arrow_upper_left.png\",\r\n  arrow_upper_right: \"graphics/emojis/arrow_upper_right.png\",\r\n  arrow_double_down: \"graphics/emojis/arrow_double_down.png\",\r\n  arrow_double_up: \"graphics/emojis/arrow_double_up.png\",\r\n  arrow_down_small: \"graphics/emojis/arrow_down_small.png\",\r\n  arrow_heading_down: \"graphics/emojis/arrow_heading_down.png\",\r\n  arrow_heading_up: \"graphics/emojis/arrow_heading_up.png\",\r\n  leftwards_arrow_with_hook: \"graphics/emojis/leftwards_arrow_with_hook.png\",\r\n  arrow_right_hook: \"graphics/emojis/arrow_right_hook.png\",\r\n  left_right_arrow: \"graphics/emojis/left_right_arrow.png\",\r\n  arrow_up_down: \"graphics/emojis/arrow_up_down.png\",\r\n  arrow_up_small: \"graphics/emojis/arrow_up_small.png\",\r\n  arrows_clockwise: \"graphics/emojis/arrows_clockwise.png\",\r\n  arrows_counterclockwise: \"graphics/emojis/arrows_counterclockwise.png\",\r\n  rewind: \"graphics/emojis/rewind.png\",\r\n  fast_forward: \"graphics/emojis/fast_forward.png\",\r\n  information_source: \"graphics/emojis/information_source.png\",\r\n  ok: \"graphics/emojis/ok.png\",\r\n  twisted_rightwards_arrows: \"graphics/emojis/twisted_rightwards_arrows.png\",\r\n  repeat: \"graphics/emojis/repeat.png\",\r\n  repeat_one: \"graphics/emojis/repeat_one.png\",\r\n  new: \"graphics/emojis/new.png\",\r\n  top: \"graphics/emojis/top.png\",\r\n  up: \"graphics/emojis/up.png\",\r\n  cool: \"graphics/emojis/cool.png\",\r\n  free: \"graphics/emojis/free.png\",\r\n  ng: \"graphics/emojis/ng.png\",\r\n  cinema: \"graphics/emojis/cinema.png\",\r\n  koko: \"graphics/emojis/koko.png\",\r\n  signal_strength: \"graphics/emojis/signal_strength.png\",\r\n  u5272: \"graphics/emojis/u5272.png\",\r\n  u5408: \"graphics/emojis/u5408.png\",\r\n  u55b6: \"graphics/emojis/u55b6.png\",\r\n  u6307: \"graphics/emojis/u6307.png\",\r\n  u6708: \"graphics/emojis/u6708.png\",\r\n  u6709: \"graphics/emojis/u6709.png\",\r\n  u6e80: \"graphics/emojis/u6e80.png\",\r\n  u7121: \"graphics/emojis/u7121.png\",\r\n  u7533: \"graphics/emojis/u7533.png\",\r\n  u7a7a: \"graphics/emojis/u7a7a.png\",\r\n  u7981: \"graphics/emojis/u7981.png\",\r\n  sa: \"graphics/emojis/sa.png\",\r\n  restroom: \"graphics/emojis/restroom.png\",\r\n  mens: \"graphics/emojis/mens.png\",\r\n  womens: \"graphics/emojis/womens.png\",\r\n  baby_symbol: \"graphics/emojis/baby_symbol.png\",\r\n  no_smoking: \"graphics/emojis/no_smoking.png\",\r\n  parking: \"graphics/emojis/parking.png\",\r\n  wheelchair: \"graphics/emojis/wheelchair.png\",\r\n  metro: \"graphics/emojis/metro.png\",\r\n  baggage_claim: \"graphics/emojis/baggage_claim.png\",\r\n  accept: \"graphics/emojis/accept.png\",\r\n  wc: \"graphics/emojis/wc.png\",\r\n  potable_water: \"graphics/emojis/potable_water.png\",\r\n  put_litter_in_its_place: \"graphics/emojis/put_litter_in_its_place.png\",\r\n  secret: \"graphics/emojis/secret.png\",\r\n  congratulations: \"graphics/emojis/congratulations.png\",\r\n  m: \"graphics/emojis/m.png\",\r\n  passport_control: \"graphics/emojis/passport_control.png\",\r\n  left_luggage: \"graphics/emojis/left_luggage.png\",\r\n  customs: \"graphics/emojis/customs.png\",\r\n  ideograph_advantage: \"graphics/emojis/ideograph_advantage.png\",\r\n  cl: \"graphics/emojis/cl.png\",\r\n  sos: \"graphics/emojis/sos.png\",\r\n  id: \"graphics/emojis/id.png\",\r\n  no_entry_sign: \"graphics/emojis/no_entry_sign.png\",\r\n  underage: \"graphics/emojis/underage.png\",\r\n  no_mobile_phones: \"graphics/emojis/no_mobile_phones.png\",\r\n  do_not_litter: \"graphics/emojis/do_not_litter.png\",\r\n  \"non-potable_water\": \"graphics/emojis/non-potable_water.png\",\r\n  no_bicycles: \"graphics/emojis/no_bicycles.png\",\r\n  no_pedestrians: \"graphics/emojis/no_pedestrians.png\",\r\n  children_crossing: \"graphics/emojis/children_crossing.png\",\r\n  no_entry: \"graphics/emojis/no_entry.png\",\r\n  eight_spoked_asterisk: \"graphics/emojis/eight_spoked_asterisk.png\",\r\n  sparkle: \"graphics/emojis/sparkle.png\",\r\n  eight_pointed_black_star: \"graphics/emojis/eight_pointed_black_star.png\",\r\n  heart_decoration: \"graphics/emojis/heart_decoration.png\",\r\n  vs: \"graphics/emojis/vs.png\",\r\n  vibration_mode: \"graphics/emojis/vibration_mode.png\",\r\n  mobile_phone_off: \"graphics/emojis/mobile_phone_off.png\",\r\n  chart: \"graphics/emojis/chart.png\",\r\n  currency_exchange: \"graphics/emojis/currency_exchange.png\",\r\n  aries: \"graphics/emojis/aries.png\",\r\n  taurus: \"graphics/emojis/taurus.png\",\r\n  gemini: \"graphics/emojis/gemini.png\",\r\n  cancer: \"graphics/emojis/cancer.png\",\r\n  leo: \"graphics/emojis/leo.png\",\r\n  virgo: \"graphics/emojis/virgo.png\",\r\n  libra: \"graphics/emojis/libra.png\",\r\n  scorpius: \"graphics/emojis/scorpius.png\",\r\n  sagittarius: \"graphics/emojis/sagittarius.png\",\r\n  capricorn: \"graphics/emojis/capricorn.png\",\r\n  aquarius: \"graphics/emojis/aquarius.png\",\r\n  pisces: \"graphics/emojis/pisces.png\",\r\n  ophiuchus: \"graphics/emojis/ophiuchus.png\",\r\n  six_pointed_star: \"graphics/emojis/six_pointed_star.png\",\r\n  negative_squared_cross_mark:\r\n    \"graphics/emojis/negative_squared_cross_mark.png\",\r\n  a: \"graphics/emojis/a.png\",\r\n  b: \"graphics/emojis/b.png\",\r\n  ab: \"graphics/emojis/ab.png\",\r\n  o2: \"graphics/emojis/o2.png\",\r\n  diamond_shape_with_a_dot_inside:\r\n    \"graphics/emojis/diamond_shape_with_a_dot_inside.png\",\r\n  recycle: \"graphics/emojis/recycle.png\",\r\n  end: \"graphics/emojis/end.png\",\r\n  back: \"graphics/emojis/back.png\",\r\n  on: \"graphics/emojis/on.png\",\r\n  soon: \"graphics/emojis/soon.png\",\r\n  clock1: \"graphics/emojis/clock1.png\",\r\n  clock130: \"graphics/emojis/clock130.png\",\r\n  clock10: \"graphics/emojis/clock10.png\",\r\n  clock1030: \"graphics/emojis/clock1030.png\",\r\n  clock11: \"graphics/emojis/clock11.png\",\r\n  clock1130: \"graphics/emojis/clock1130.png\",\r\n  clock12: \"graphics/emojis/clock12.png\",\r\n  clock1230: \"graphics/emojis/clock1230.png\",\r\n  clock2: \"graphics/emojis/clock2.png\",\r\n  clock230: \"graphics/emojis/clock230.png\",\r\n  clock3: \"graphics/emojis/clock3.png\",\r\n  clock330: \"graphics/emojis/clock330.png\",\r\n  clock4: \"graphics/emojis/clock4.png\",\r\n  clock430: \"graphics/emojis/clock430.png\",\r\n  clock5: \"graphics/emojis/clock5.png\",\r\n  clock530: \"graphics/emojis/clock530.png\",\r\n  clock6: \"graphics/emojis/clock6.png\",\r\n  clock630: \"graphics/emojis/clock630.png\",\r\n  clock7: \"graphics/emojis/clock7.png\",\r\n  clock730: \"graphics/emojis/clock730.png\",\r\n  clock8: \"graphics/emojis/clock8.png\",\r\n  clock830: \"graphics/emojis/clock830.png\",\r\n  clock9: \"graphics/emojis/clock9.png\",\r\n  clock930: \"graphics/emojis/clock930.png\",\r\n  heavy_dollar_sign: \"graphics/emojis/heavy_dollar_sign.png\",\r\n  copyright: \"graphics/emojis/copyright.png\",\r\n  registered: \"graphics/emojis/registered.png\",\r\n  tm: \"graphics/emojis/tm.png\",\r\n  x: \"graphics/emojis/x.png\",\r\n  heavy_exclamation_mark: \"graphics/emojis/heavy_exclamation_mark.png\",\r\n  bangbang: \"graphics/emojis/bangbang.png\",\r\n  interrobang: \"graphics/emojis/interrobang.png\",\r\n  o: \"graphics/emojis/o.png\",\r\n  heavy_multiplication_x: \"graphics/emojis/heavy_multiplication_x.png\",\r\n  heavy_plus_sign: \"graphics/emojis/heavy_plus_sign.png\",\r\n  heavy_minus_sign: \"graphics/emojis/heavy_minus_sign.png\",\r\n  heavy_division_sign: \"graphics/emojis/heavy_division_sign.png\",\r\n  white_flower: \"graphics/emojis/white_flower.png\",\r\n  heavy_check_mark: \"graphics/emojis/heavy_check_mark.png\",\r\n  ballot_box_with_check: \"graphics/emojis/ballot_box_with_check.png\",\r\n  radio_button: \"graphics/emojis/radio_button.png\",\r\n  link: \"graphics/emojis/link.png\",\r\n  curly_loop: \"graphics/emojis/curly_loop.png\",\r\n  wavy_dash: \"graphics/emojis/wavy_dash.png\",\r\n  part_alternation_mark: \"graphics/emojis/part_alternation_mark.png\",\r\n  trident: \"graphics/emojis/trident.png\",\r\n  black_small_square: \"graphics/emojis/black_small_square.png\",\r\n  white_small_square: \"graphics/emojis/white_small_square.png\",\r\n  black_medium_small_square: \"graphics/emojis/black_medium_small_square.png\",\r\n  white_medium_small_square: \"graphics/emojis/white_medium_small_square.png\",\r\n  black_medium_square: \"graphics/emojis/black_medium_square.png\",\r\n  white_medium_square: \"graphics/emojis/white_medium_square.png\",\r\n  black_large_square: \"graphics/emojis/black_square.png\",\r\n  white_large_square: \"graphics/emojis/white_large_square.png\",\r\n  white_check_mark: \"graphics/emojis/white_check_mark.png\",\r\n  black_square_button: \"graphics/emojis/black_square_button.png\",\r\n  white_square_button: \"graphics/emojis/white_square_button.png\",\r\n  black_circle: \"graphics/emojis/black_circle.png\",\r\n  white_circle: \"graphics/emojis/white_circle.png\",\r\n  red_circle: \"graphics/emojis/red_circle.png\",\r\n  large_blue_circle: \"graphics/emojis/large_blue_circle.png\",\r\n  large_blue_diamond: \"graphics/emojis/large_blue_diamond.png\",\r\n  large_orange_diamond: \"graphics/emojis/large_orange_diamond.png\",\r\n  small_blue_diamond: \"graphics/emojis/small_blue_diamond.png\",\r\n  small_orange_diamond: \"graphics/emojis/small_orange_diamond.png\",\r\n  small_red_triangle: \"graphics/emojis/small_red_triangle.png\",\r\n  small_red_triangle_down: \"graphics/emojis/small_red_triangle_down.png\",\r\n  shipit: \"graphics/emojis/shipit.png\",\r\n};\r\nfor (let key in emoji) {\r\n  // key = \":\" + key + \":\";         //new key     //old key   //old key\r\n  delete Object.assign(emoji, {\r\n    [\":\" + key + \":\"]: emoji[key],\r\n  })[key]; //Переименование ключей в объекте emoji: smile => :smile:\r\n}\r\nlet emojiImgCollection = [];\r\nlet emojiImgCollectionTwo = Object.entries(emoji);\r\nfor (let key in emoji) {\r\n  let img = document.createElement(\"img\");\r\n  img.setAttribute(\"style\", \"width: 25px; height: 25px\");\r\n  img.setAttribute(\"id\", [key]);\r\n  img.setAttribute(\r\n    \"src\",\r\n    `https://www.webfx.com/tools/emoji-cheat-sheet/${emoji[key]}`\r\n  );\r\n  emojiImgCollection.push(img);\r\n}\r\n\r\nexport const EmojiList = function () {\r\n  return (\r\n    <div\r\n      id=\"emojiList\"\r\n      // onMouseLeave={() => {\r\n      //   let eList = document.querySelector(\"#emojiList\");\r\n      //   eList.style = \"display: none\";\r\n      // }}\r\n    >\r\n      {emojiImgCollectionTwo.map((item) => {\r\n        return (\r\n          <img\r\n            className=\"emoji--img\"\r\n            src={`https://www.webfx.com/tools/emoji-cheat-sheet/${item[1]}`}\r\n            alt={item[0]}\r\n            onClick={(event) => {\r\n              let msg = document.querySelector(\"#input-message\");\r\n              msg.value += item[0];\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\n// YOUTUBE_REGEXP\r\nexport function youtube(str) {\r\n  let array = [];\r\n  array = str.match(\r\n    /http(?:s?):\\/\\/(?:www\\.)?youtu(?:be\\.com\\/watch\\?v=|\\.be\\/)([\\w\\-\\_]*)(&(amp;)?‌​[\\w\\?‌​=]*)?/gim\r\n  );\r\n  console.log(\"array: \", array);\r\n  if (array) {\r\n    console.log(array);\r\n    let linkOnYouTube = `<span>${str.replace(YOUTUBE_REGEXP, \"\")}</span><br />`;\r\n    for (let i = 0; i < array.length; i++) {\r\n      linkOnYouTube += `<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/${array[\r\n        i\r\n      ]\r\n        .replace(YOUTUBE_REGEXP, array[i].match(YOUTUBE_REGEXP_ID))\r\n        .replace(\r\n          \"=\",\r\n          \"\"\r\n        )}\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><br /><a target=\"_blank\" href=\"${\r\n        array[i]\r\n      }\">${array[i]}</a><br />`;\r\n    }\r\n    return linkOnYouTube;\r\n  } else {\r\n    return str;\r\n  }\r\n}\r\n\r\n// EMOJI_REGEXP\r\nexport function emojiSend(str) {\r\n  let newStr = \"\";\r\n  for (let key in emoji) {\r\n    let position = 0;\r\n    while (true) {\r\n      newStr = str.replace(\r\n        `${key}`,\r\n        `<img style=\"width: 25px; height: 25px;\" src=https://www.webfx.com/tools/emoji-cheat-sheet/${emoji[key]} />`\r\n      );\r\n      str = newStr;\r\n      let find = str.indexOf(`${key}`, position);\r\n      if (find == -1) {\r\n        break;\r\n      }\r\n    }\r\n    // console.log(\"newStr IN ZAMENA: \" + newStr);\r\n  }\r\n  newStr = newStr.replace(/<.+>/gi, \"\");\r\n  console.log(\"newStr: \", newStr);\r\n\r\n  let newStr2 = str.replace(/.+(?=<)/gi,\"\");\r\n\r\n\r\n  // console.log('newStr: ', newStr);\r\n  // if (YOUTUBE_REGEXP.test(newStr)) {\r\n  //   newStr += youtube(newStr);\r\n  //   console.log('newStr: ', newStr);\r\n  // }\r\n  // if (IMAGE_REGEXP.test(newStr)) {\r\n  //   newStr += images(newStr);\r\n  //   console.log('newStr: ', newStr);\r\n  // }\r\n  // newStr = newStr.replace(\r\n  //   /http(?:s?):\\/\\/(?:www\\.)?youtu(?:be\\.com\\/watch\\?v=|\\.be\\/)([\\w\\-\\_]*)(&(amp;)?‌​[\\w\\?‌​=]*)?/g, \"\");\r\n  // newStr = newStr.replace(/http(?:s?):\\/\\/(.*)(gif|jpe?g|bmp|png)$/igm, \"\");\r\n  return newStr;\r\n}\r\n\r\nexport default EmojiList;\r\n","C:\\Users\\HOUSTON\\Desktop\\FE20\\react_chat\\myproject\\src\\actions\\promiseActions.js",[],{"ruleId":"190","severity":1,"message":"191","line":1,"column":17,"nodeType":"192","messageId":"193","endLine":1,"endColumn":25},{"ruleId":"190","severity":1,"message":"194","line":1,"column":27,"nodeType":"192","messageId":"193","endLine":1,"endColumn":36},{"ruleId":"190","severity":1,"message":"195","line":2,"column":18,"nodeType":"192","messageId":"193","endLine":2,"endColumn":23},{"ruleId":"190","severity":1,"message":"196","line":2,"column":25,"nodeType":"192","messageId":"193","endLine":2,"endColumn":29},{"ruleId":"190","severity":1,"message":"197","line":2,"column":31,"nodeType":"192","messageId":"193","endLine":2,"endColumn":37},{"ruleId":"190","severity":1,"message":"198","line":6,"column":20,"nodeType":"192","messageId":"193","endLine":6,"endColumn":27},{"ruleId":"190","severity":1,"message":"199","line":12,"column":10,"nodeType":"192","messageId":"193","endLine":12,"endColumn":17},{"ruleId":"190","severity":1,"message":"200","line":12,"column":19,"nodeType":"192","messageId":"193","endLine":12,"endColumn":28},{"ruleId":"190","severity":1,"message":"201","line":12,"column":30,"nodeType":"192","messageId":"193","endLine":12,"endColumn":44},{"ruleId":"190","severity":1,"message":"202","line":12,"column":46,"nodeType":"192","messageId":"193","endLine":12,"endColumn":58},{"ruleId":"203","severity":1,"message":"204","line":86,"column":28,"nodeType":"205","messageId":"206","endLine":86,"endColumn":52},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"207","replacedBy":"211"},{"ruleId":"209","replacedBy":"212"},{"ruleId":"190","severity":1,"message":"213","line":7,"column":10,"nodeType":"192","messageId":"193","endLine":7,"endColumn":14},{"ruleId":"214","severity":1,"message":"215","line":18,"column":1,"nodeType":"216","endLine":38,"endColumn":3},{"ruleId":"207","replacedBy":"217"},{"ruleId":"209","replacedBy":"218"},{"ruleId":"207","replacedBy":"219"},{"ruleId":"209","replacedBy":"220"},{"ruleId":"207","replacedBy":"221"},{"ruleId":"209","replacedBy":"222"},{"ruleId":"190","severity":1,"message":"223","line":6,"column":10,"nodeType":"192","messageId":"193","endLine":6,"endColumn":28},{"ruleId":"190","severity":1,"message":"224","line":9,"column":10,"nodeType":"192","messageId":"193","endLine":9,"endColumn":15},{"ruleId":"190","severity":1,"message":"225","line":10,"column":10,"nodeType":"192","messageId":"193","endLine":10,"endColumn":14},{"ruleId":"190","severity":1,"message":"226","line":10,"column":16,"nodeType":"192","messageId":"193","endLine":10,"endColumn":21},{"ruleId":"227","severity":1,"message":"228","line":52,"column":6,"nodeType":"205","endLine":52,"endColumn":19,"suggestions":"229"},{"ruleId":"230","severity":1,"message":"231","line":116,"column":11,"nodeType":"232","endLine":116,"endColumn":52},{"ruleId":"190","severity":1,"message":"224","line":7,"column":10,"nodeType":"192","messageId":"193","endLine":7,"endColumn":15},{"ruleId":"227","severity":1,"message":"228","line":54,"column":6,"nodeType":"205","endLine":54,"endColumn":19,"suggestions":"233"},{"ruleId":"190","severity":1,"message":"191","line":1,"column":17,"nodeType":"192","messageId":"193","endLine":1,"endColumn":25},{"ruleId":"190","severity":1,"message":"234","line":10,"column":5,"nodeType":"192","messageId":"193","endLine":10,"endColumn":9},{"ruleId":"227","severity":1,"message":"235","line":34,"column":6,"nodeType":"205","endLine":34,"endColumn":8,"suggestions":"236"},{"ruleId":"190","severity":1,"message":"199","line":12,"column":3,"nodeType":"192","messageId":"193","endLine":12,"endColumn":10},{"ruleId":"190","severity":1,"message":"201","line":14,"column":3,"nodeType":"192","messageId":"193","endLine":14,"endColumn":17},{"ruleId":"190","severity":1,"message":"237","line":17,"column":10,"nodeType":"192","messageId":"193","endLine":17,"endColumn":25},{"ruleId":"190","severity":1,"message":"238","line":18,"column":10,"nodeType":"192","messageId":"193","endLine":18,"endColumn":17},{"ruleId":"227","severity":1,"message":"239","line":61,"column":8,"nodeType":"205","endLine":61,"endColumn":16,"suggestions":"240"},{"ruleId":"241","severity":1,"message":"242","line":106,"column":40,"nodeType":"243","messageId":"244","endLine":106,"endColumn":42},{"ruleId":"207","replacedBy":"245"},{"ruleId":"209","replacedBy":"246"},{"ruleId":"190","severity":1,"message":"247","line":10,"column":10,"nodeType":"192","messageId":"193","endLine":10,"endColumn":19},{"ruleId":"190","severity":1,"message":"199","line":10,"column":21,"nodeType":"192","messageId":"193","endLine":10,"endColumn":28},{"ruleId":"190","severity":1,"message":"201","line":10,"column":30,"nodeType":"192","messageId":"193","endLine":10,"endColumn":44},{"ruleId":"190","severity":1,"message":"248","line":50,"column":12,"nodeType":"192","messageId":"193","endLine":50,"endColumn":21},{"ruleId":"190","severity":1,"message":"249","line":50,"column":23,"nodeType":"192","messageId":"193","endLine":50,"endColumn":35},{"ruleId":"227","severity":1,"message":"250","line":59,"column":8,"nodeType":"205","endLine":59,"endColumn":20,"suggestions":"251"},{"ruleId":"252","severity":1,"message":"253","line":110,"column":21,"nodeType":"232","endLine":113,"endColumn":22},{"ruleId":"190","severity":1,"message":"254","line":1,"column":8,"nodeType":"192","messageId":"193","endLine":1,"endColumn":13},{"ruleId":"227","severity":1,"message":"235","line":49,"column":8,"nodeType":"205","endLine":49,"endColumn":16,"suggestions":"255"},{"ruleId":"252","severity":1,"message":"253","line":62,"column":13,"nodeType":"232","endLine":65,"endColumn":14},{"ruleId":"241","severity":1,"message":"242","line":139,"column":37,"nodeType":"243","messageId":"244","endLine":139,"endColumn":39},{"ruleId":"207","replacedBy":"256"},{"ruleId":"209","replacedBy":"257"},{"ruleId":"207","replacedBy":"258"},{"ruleId":"209","replacedBy":"259"},{"ruleId":"190","severity":1,"message":"260","line":2,"column":23,"nodeType":"192","messageId":"193","endLine":2,"endColumn":41},{"ruleId":"190","severity":1,"message":"261","line":101,"column":9,"nodeType":"192","messageId":"193","endLine":101,"endColumn":13},{"ruleId":"190","severity":1,"message":"261","line":131,"column":9,"nodeType":"192","messageId":"193","endLine":131,"endColumn":13},{"ruleId":"190","severity":1,"message":"261","line":161,"column":9,"nodeType":"192","messageId":"193","endLine":161,"endColumn":13},{"ruleId":"190","severity":1,"message":"261","line":186,"column":9,"nodeType":"192","messageId":"193","endLine":186,"endColumn":13},{"ruleId":"190","severity":1,"message":"261","line":240,"column":9,"nodeType":"192","messageId":"193","endLine":240,"endColumn":13},{"ruleId":"190","severity":1,"message":"261","line":328,"column":9,"nodeType":"192","messageId":"193","endLine":328,"endColumn":13},{"ruleId":"190","severity":1,"message":"262","line":6,"column":3,"nodeType":"192","messageId":"193","endLine":6,"endColumn":19},{"ruleId":"190","severity":1,"message":"263","line":7,"column":3,"nodeType":"192","messageId":"193","endLine":7,"endColumn":21},{"ruleId":"190","severity":1,"message":"264","line":11,"column":3,"nodeType":"192","messageId":"193","endLine":11,"endColumn":22},{"ruleId":"227","severity":1,"message":"265","line":75,"column":8,"nodeType":"205","endLine":75,"endColumn":19,"suggestions":"266"},{"ruleId":"267","severity":1,"message":"268","line":3,"column":97,"nodeType":"269","messageId":"270","endLine":3,"endColumn":98,"suggestions":"271"},{"ruleId":"267","severity":1,"message":"272","line":3,"column":116,"nodeType":"269","messageId":"270","endLine":3,"endColumn":117,"suggestions":"273"},{"ruleId":"267","severity":1,"message":"268","line":4,"column":51,"nodeType":"269","messageId":"270","endLine":4,"endColumn":52,"suggestions":"274"},{"ruleId":"267","severity":1,"message":"272","line":4,"column":70,"nodeType":"269","messageId":"270","endLine":4,"endColumn":71,"suggestions":"275"},{"ruleId":"267","severity":1,"message":"268","line":943,"column":71,"nodeType":"269","messageId":"270","endLine":943,"endColumn":72,"suggestions":"276"},{"ruleId":"267","severity":1,"message":"272","line":943,"column":90,"nodeType":"269","messageId":"270","endLine":943,"endColumn":91,"suggestions":"277"},{"ruleId":"241","severity":1,"message":"242","line":979,"column":16,"nodeType":"243","messageId":"244","endLine":979,"endColumn":18},{"ruleId":"190","severity":1,"message":"278","line":988,"column":7,"nodeType":"192","messageId":"193","endLine":988,"endColumn":14},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","'connect' is defined but never used.","'youtube' is defined but never used.","'emojiSend' is defined but never used.","'YOUTUBE_REGEXP' is defined but never used.","'EMOJI_REGEXP' is defined but never used.","no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","no-native-reassign",["279"],"no-negated-in-lhs",["280"],["279"],["280"],"'User' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["279"],["280"],["279"],["280"],["279"],["280"],"'bindActionCreators' is defined but never used.","'check' is defined but never used.","'Spin' is defined but never used.","'Alert' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'state'. Either include them or remove the dependency array.",["281"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["282"],"'user' is defined but never used.","React Hook useEffect has missing dependencies: 'login' and 'onUserFindOne'. Either include them or remove the dependency array. If 'onUserFindOne' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["283"],"'FontAwesomeIcon' is defined but never used.","'faSmile' is defined but never used.","React Hook useEffect has missing dependencies: 'login', 'onGetMessages', and 'onUserFindOne'. Either include them or remove the dependency array. If 'onGetMessages' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["284"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["279"],["280"],"'EmojiList' is defined but never used.","'chatTitle' is assigned a value but never used.","'setChatTitle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onFindChats' and 'userId'. Either include them or remove the dependency array. If 'onFindChats' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["285"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'React' is defined but never used.",["286"],["279"],["280"],["279"],["280"],"'actionAuthUserInfo' is defined but never used.","'data' is assigned a value but never used.","'actionCreateChat' is defined but never used.","'actionFindAllChats' is defined but never used.","'actionAddUsersLogin' is defined but never used.","React Hook useEffect has missing dependencies: 'onSaveUserLogin' and 'usersToChat'. Either include them or remove the dependency array. If 'onSaveUserLogin' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["287"],"no-useless-escape","Unnecessary escape character: \\_.","Literal","unnecessaryEscape",["288","289"],"Unnecessary escape character: \\?.",["290","291"],["292","293"],["294","295"],["296","297"],["298","299"],"'newStr2' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"300","fix":"301"},{"desc":"300","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"messageId":"313","fix":"314","desc":"315"},{"messageId":"316","fix":"317","desc":"318"},{"messageId":"313","fix":"319","desc":"315"},{"messageId":"316","fix":"320","desc":"318"},{"messageId":"313","fix":"321","desc":"315"},{"messageId":"316","fix":"322","desc":"318"},{"messageId":"313","fix":"323","desc":"315"},{"messageId":"316","fix":"324","desc":"318"},{"messageId":"313","fix":"325","desc":"315"},{"messageId":"316","fix":"326","desc":"318"},{"messageId":"313","fix":"327","desc":"315"},{"messageId":"316","fix":"328","desc":"318"},"Update the dependencies array to be: [id, failure, history, state]",{"range":"329","text":"330"},{"range":"331","text":"330"},"Update the dependencies array to be: [login, onUserFindOne]",{"range":"332","text":"333"},"Update the dependencies array to be: [chatId, login, onGetMessages, onUserFindOne]",{"range":"334","text":"335"},"Update the dependencies array to be: [chatCreate, onFindChats, userId]",{"range":"336","text":"337"},"Update the dependencies array to be: [login, onUserFindOne, upload]",{"range":"338","text":"339"},"Update the dependencies array to be: [foundUser, onSaveUserLogin, usersToChat]",{"range":"340","text":"341"},"removeEscape",{"range":"342","text":"343"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"344","text":"345"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"346","text":"343"},{"range":"347","text":"345"},{"range":"348","text":"343"},{"range":"349","text":"345"},{"range":"350","text":"343"},{"range":"351","text":"345"},{"range":"352","text":"343"},{"range":"353","text":"345"},{"range":"354","text":"343"},{"range":"355","text":"345"},[1651,1664],"[id, failure, history, state]",[1452,1465],[1180,1182],"[login, onUserFindOne]",[1601,1609],"[chatId, login, onGetMessages, onUserFindOne]",[1636,1648],"[chatCreate, onFindChats, userId]",[1388,1396],"[login, onUserFindOne, upload]",[2299,2310],"[foundUser, onSaveUserLogin, usersToChat]",[132,133],"",[132,132],"\\",[151,152],[151,151],[217,218],[217,217],[236,237],[236,236],[43219,43220],[43219,43219],[43238,43239],[43238,43238]]